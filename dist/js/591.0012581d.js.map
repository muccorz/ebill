{"version":3,"file":"js/591.0012581d.js","mappings":"sJAAA,IAAIA,EAAS,WAAkB,IAAIC,EAAIC,KAAKC,EAAGF,EAAIG,MAAMD,GAAG,OAAOA,EAAG,MAAM,CAACE,YAAY,CAAC,aAAa,SAAS,CAACF,EAAG,MAAM,CAACG,YAAY,KAAKD,YAAY,CAAC,cAAc,MAAM,aAAa,SAAS,CAACJ,EAAIM,GAAG,aAAaJ,EAAG,cAAcA,EAAG,MAAM,CAACG,YAAY,SAASD,YAAY,CAAC,kBAAkB,iBAAiB,CAACF,EAAG,UAAU,CAACG,YAAY,YAAY,CAACH,EAAG,MAAM,CAACG,YAAY,WAAWE,MAAM,CAAC,KAAO,UAAUC,KAAK,UAAU,CAACN,EAAG,OAAO,CAACF,EAAIM,GAAG,UAAUJ,EAAG,YAAY,CAACE,YAAY,CAAC,MAAQ,QAAQ,QAAU,SAASG,MAAM,CAAC,KAAO,QAAQE,GAAG,CAAC,MAAQT,EAAIU,cAAc,CAACV,EAAIM,GAAG,SAAS,GAAGN,EAAIW,GAAIX,EAAIY,WAAW,SAASC,GAAU,OAAOX,EAAG,MAAM,CAACY,IAAID,EAASE,WAAWV,YAAY,mBAAmBD,YAAY,CAAC,kBAAkB,kBAAkB,CAACF,EAAG,MAAM,CAACF,EAAIM,GAAGN,EAAIgB,GAAGH,EAASA,aAAaX,EAAG,YAAY,CAACK,MAAM,CAAC,KAAO,OAAO,KAAO,SAAS,KAAO,kBAAkBE,GAAG,CAAC,MAAQ,SAASQ,GAAQ,OAAOjB,EAAIkB,eAAeL,EAASE,WAAW,IAAI,CAACf,EAAIM,GAAG,SAAS,EAAE,KAAI,GAAGJ,EAAG,UAAU,CAACG,YAAY,YAAY,CAACH,EAAG,MAAM,CAACG,YAAY,WAAWE,MAAM,CAAC,KAAO,UAAUC,KAAK,UAAU,CAACN,EAAG,OAAO,CAACF,EAAIM,GAAG,SAASJ,EAAG,YAAY,CAACE,YAAY,CAAC,MAAQ,QAAQ,QAAU,SAASG,MAAM,CAAC,KAAO,QAAQE,GAAG,CAAC,MAAQ,SAASQ,GAAQjB,EAAImB,mBAAmB,CAAI,IAAI,CAACnB,EAAIM,GAAG,QAAQJ,EAAG,YAAY,CAACK,MAAM,CAAC,MAAQ,QAAQ,QAAUP,EAAImB,mBAAmBV,GAAG,CAAC,iBAAiB,SAASQ,GAAQjB,EAAImB,kBAAkBF,CAAM,EAAE,OAASjB,EAAIoB,eAAe,CAAClB,EAAG,UAAU,CAACK,MAAM,CAAC,MAAQP,EAAIqB,WAAW,CAACnB,EAAG,eAAe,CAACK,MAAM,CAAC,MAAQ,QAAQ,CAAEP,EAAIsB,MAAOpB,EAAG,OAAO,CAACG,YAAY,cAAcD,YAAY,CAAC,YAAY,SAAS,CAACJ,EAAIM,GAAG,kBAAkBN,EAAIuB,KAAKrB,EAAG,WAAW,CAACK,MAAM,CAAC,aAAe,OAAOE,GAAG,CAAC,KAAOT,EAAIwB,cAAcC,MAAM,CAACC,MAAO1B,EAAIqB,SAASA,SAAUM,SAAS,SAAUC,GAAM5B,EAAI6B,KAAK7B,EAAIqB,SAAU,WAAYO,EAAI,EAAEE,WAAW,wBAAwB,GAAG5B,EAAG,eAAe,CAACK,MAAM,CAAC,MAAQ,UAAU,CAAEP,EAAI+B,MAAO7B,EAAG,OAAO,CAACG,YAAY,cAAcD,YAAY,CAAC,YAAY,SAAS,CAACJ,EAAIM,GAAG,oBAAoBN,EAAIuB,KAAKrB,EAAG,YAAY,CAACG,YAAY,QAAQE,MAAM,CAAC,WAAa,GAAG,eAAe,GAAG,uBAAuB,GAAG,YAAc,kBAAkBkB,MAAM,CAACC,MAAO1B,EAAIqB,SAASW,aAAcL,SAAS,SAAUC,GAAM5B,EAAI6B,KAAK7B,EAAIqB,SAAU,eAAgBO,EAAI,EAAEE,WAAW,0BAA0B9B,EAAIW,GAAIX,EAAIiC,eAAe,SAASD,GAAc,OAAO9B,EAAG,YAAY,CAACY,IAAIkB,EAAaA,aAAazB,MAAM,CAAC,MAAQyB,EAAaA,aAAa,MAAQA,EAAaA,eAAe,IAAG,IAAI,IAAI,GAAG9B,EAAG,MAAM,CAACG,YAAY,gBAAgBE,MAAM,CAAC,KAAO,UAAUC,KAAK,UAAU,CAACN,EAAG,YAAY,CAACO,GAAG,CAAC,MAAQ,SAASQ,GAAQjB,EAAImB,mBAAoB,CAAK,IAAI,CAACnB,EAAIM,GAAG,WAAWJ,EAAG,YAAY,CAACK,MAAM,CAAC,KAAO,UAAU,SAAWP,EAAIkC,eAAezB,GAAG,CAAC,MAAQT,EAAImC,cAAc,CAACnC,EAAIM,GAAG,UAAU,IAAI,IAAI,GAAGN,EAAIW,GAAIX,EAAIoC,WAAW,SAASf,GAAU,OAAOnB,EAAG,MAAM,CAACY,IAAIO,EAASgB,WAAWhC,YAAY,mBAAmBD,YAAY,CAAC,kBAAkB,kBAAkB,CAACF,EAAG,MAAM,CAACE,YAAY,CAAC,MAAQ,UAAU,CAACJ,EAAIM,GAAGN,EAAIgB,GAAGK,EAASA,aAAanB,EAAG,MAAM,CAACF,EAAIM,GAAGN,EAAIgB,GAAGK,EAASW,iBAAiB9B,EAAG,YAAY,CAACK,MAAM,CAAC,KAAO,OAAO,KAAO,SAAS,KAAO,kBAAkBE,GAAG,CAAC,MAAQ,SAASQ,GAAQ,OAAOjB,EAAIsC,eAAejB,EAASgB,WAAW,IAAI,CAACrC,EAAIM,GAAG,SAAS,EAAE,KAAI,IAAI,IAAI,EACluG,EACIiC,EAAkB,GCmEtB,GACAC,IAAAA,GACA,OACAC,KAAA,GACAtB,mBAAA,EACAG,OAAA,EACAS,OAAA,EACAlB,SAAA,CACAA,SAAA,IAEAQ,SAAA,CACAA,SAAA,GACAW,aAAA,IAEAC,cAAA,GACArB,UAAA,GACAwB,UAAA,GAEA,EACAM,KAAA,eACAC,SAAA,CACAT,aAAAA,GACA,gBAAAb,SAAAA,UAAA,UAAAA,SAAAW,YACA,GAKAY,OAAAA,GACA,KAAAC,YACA,KAAAC,gBACA,KAAAC,mBACA,EACAC,QAAA,CAIAF,aAAAA,GACA,KAAAG,MAAAC,IAAA,0BACAC,MAAAC,IACA,KAAAhB,UAAAgB,EAAAZ,KAAAA,IAAA,GAEA,EACAO,iBAAAA,GACA,KAAAE,MAAAC,IAAA,8BACAC,MAAAC,IACA,KAAAnB,cAAAmB,EAAAZ,KAAAA,IAAA,GAEA,EACAhB,YAAAA,GACA,UAAAH,SAAAA,SACA,KAAAC,OAAA,EAEA,KAAAA,OAAA,CAEA,EACAgB,cAAAA,CAAAD,GACA,KAAAgB,SAAA,wCACAC,kBAAA,KACAC,iBAAA,QACAC,KAAA,YACAL,MAAA,KACA,KAAAF,MAAAC,IAAA,4BAAAb,GACAc,MAAAC,IACA,MAAAA,EAAAZ,KAAAiB,OACA,KAAAC,SAAA,CACAF,KAAA,UACAG,QAAA,SAEA,KAAAvC,eACA,GACA,IACAwC,OAAA,QACA,EAEAzB,WAAAA,GACA,IAAAb,GAAA,EACA,KAAAW,cAAA4B,SAAAxC,IACA,KAAAA,SAAAW,eAAAX,EAAAW,eACAV,GAAA,EACA,IAEAA,EASA,KAAAwC,kBARA,KAAAT,SAAA,oCACAC,kBAAA,KACAC,iBAAA,QACAC,KAAA,YACAL,MAAA,KACA,KAAAW,iBAAA,GAKA,EACAA,eAAAA,GACA,KAAAb,MAAAc,KAAA,6BAAA1C,UACA8B,MAAAC,IACA,MAAAA,EAAAZ,KAAAiB,OACA,KAAAC,SAAA,CACAF,KAAA,UACAG,QAAA,SAEA,KAAAK,gBACA,KAAAC,eACA,IAEA,KAAA9C,mBAAA,CACA,EACAD,cAAAA,CAAAH,GACA,KAAAsC,SAAA,0CACAC,kBAAA,KACAC,iBAAA,QACAC,KAAA,YACAL,MAAA,KACA,KAAAF,MAAAC,IAAA,4BAAAnC,GACAoC,MAAAC,IACA,MAAAA,EAAAZ,KAAAiB,OACA,KAAAC,SAAA,CACAF,KAAA,UACAG,QAAA,SAEA,KAAAd,YACA,GACA,IACAe,OAAA,QACA,EACAlD,WAAAA,GACA,KAAAwD,QAAA,wBACAZ,kBAAA,KACAC,iBAAA,UACAJ,MAAA,EAAAzB,YACA,MAAAA,GAAA,KAAAA,EAOA,KAAAuB,MAAAC,IAAA,yBAAAxB,GACAyB,MAAAC,IACA,MAAAA,EAAAZ,KAAAiB,OACA,KAAAC,SAAA,CACAF,KAAA,UACAG,QAAA,SAEA,KAAAd,YACA,IAdA,KAAAa,SAAA,CACAF,KAAA,UACAG,QAAA,eAaA,IACAC,OAAA,QACA,EACAO,kBAAAA,CAAAC,GACA,MAAA3B,EAAA2B,EAAAC,OAAAC,MAAA,GAAA7B,KACA,KAAAA,KAAAA,CACA,EACA8B,gBAAAA,GACA,KAAAC,MAAAC,UAAAC,OACA,EACA7B,SAAAA,GACA,KAAAI,MAAAC,IAAA,0BACAC,MAAAC,IACA,KAAAxC,UAAAwC,EAAAZ,KAAAA,IAAA,GAEA,EACAwB,aAAAA,GACA,KAAAf,MAAAC,IAAA,0BACAC,MAAAC,IACA,KAAAhB,UAAAgB,EAAAZ,KAAAA,IAAA,GAEA,EACApB,YAAAA,GACA,KAAAC,SAAAA,SAAA,GACA,KAAAA,SAAAW,aAAA,EACA,ICjPuP,I,UCQnP2C,GAAY,OACd,EACA5E,EACAwC,GACA,EACA,KACA,WACA,MAIF,EAAeoC,EAAiB,O","sources":["webpack://ebill/./src/views/category.vue","webpack://ebill/src/views/category.vue","webpack://ebill/./src/views/category.vue?5cbc","webpack://ebill/./src/views/category.vue?b9e5"],"sourcesContent":["var render = function render(){var _vm=this,_c=_vm._self._c;return _c('div',{staticStyle:{\"text-align\":\"left\"}},[_c('div',{staticClass:\"h4\",staticStyle:{\"font-weight\":\"700\",\"text-align\":\"left\"}},[_vm._v(\"カテゴリー管理\")]),_c('el-divider'),_c('div',{staticClass:\"d-flex\",staticStyle:{\"justify-content\":\"space-around\"}},[_c('el-card',{staticClass:\"box-card\"},[_c('div',{staticClass:\"clearfix\",attrs:{\"slot\":\"header\"},slot:\"header\"},[_c('span',[_vm._v(\"帳票種類\")]),_c('el-button',{staticStyle:{\"float\":\"right\",\"padding\":\"3px 0\"},attrs:{\"type\":\"text\"},on:{\"click\":_vm.addBillType}},[_vm._v(\"新規\")])],1),_vm._l((_vm.billTypes),function(billType){return _c('div',{key:billType.billTypeno,staticClass:\"text item d-flex\",staticStyle:{\"justify-content\":\"space-between\"}},[_c('div',[_vm._v(_vm._s(billType.billType))]),_c('el-button',{attrs:{\"size\":\"mini\",\"type\":\"danger\",\"icon\":\"el-icon-delete\"},on:{\"click\":function($event){return _vm.deleteBillType(billType.billTypeno)}}},[_vm._v(\"削除\")])],1)})],2),_c('el-card',{staticClass:\"box-card\"},[_c('div',{staticClass:\"clearfix\",attrs:{\"slot\":\"header\"},slot:\"header\"},[_c('span',[_vm._v(\"取引先\")]),_c('el-button',{staticStyle:{\"float\":\"right\",\"padding\":\"3px 0\"},attrs:{\"type\":\"text\"},on:{\"click\":function($event){_vm.dialogFormVisible= true}}},[_vm._v(\"新規\")]),_c('el-dialog',{attrs:{\"title\":\"取引先新規\",\"visible\":_vm.dialogFormVisible},on:{\"update:visible\":function($event){_vm.dialogFormVisible=$event},\"closed\":_vm.customerInit}},[_c('el-form',{attrs:{\"model\":_vm.customer}},[_c('el-form-item',{attrs:{\"label\":\"取引先\"}},[(_vm.flag1)?_c('span',{staticClass:\"text-danger\",staticStyle:{\"font-size\":\"12px\"}},[_vm._v(\"取引先を入力してください\")]):_vm._e(),_c('el-input',{attrs:{\"autocomplete\":\"off\"},on:{\"blur\":_vm.customerBlur},model:{value:(_vm.customer.customer),callback:function ($$v) {_vm.$set(_vm.customer, \"customer\", $$v)},expression:\"customer.customer\"}})],1),_c('el-form-item',{attrs:{\"label\":\"取引先種類\"}},[(_vm.flag2)?_c('span',{staticClass:\"text-danger\",staticStyle:{\"font-size\":\"12px\"}},[_vm._v(\"取引先種類を入力してください\")]):_vm._e(),_c('el-select',{staticClass:\"w-100\",attrs:{\"filterable\":\"\",\"allow-create\":\"\",\"default-first-option\":\"\",\"placeholder\":\"取引先種類を選択してください\"},model:{value:(_vm.customer.customerType),callback:function ($$v) {_vm.$set(_vm.customer, \"customerType\", $$v)},expression:\"customer.customerType\"}},_vm._l((_vm.customerTypes),function(customerType){return _c('el-option',{key:customerType.customerType,attrs:{\"label\":customerType.customerType,\"value\":customerType.customerType}})}),1)],1)],1),_c('div',{staticClass:\"dialog-footer\",attrs:{\"slot\":\"footer\"},slot:\"footer\"},[_c('el-button',{on:{\"click\":function($event){_vm.dialogFormVisible = false}}},[_vm._v(\"キャンセル\")]),_c('el-button',{attrs:{\"type\":\"primary\",\"disabled\":_vm.addCustomerBt},on:{\"click\":_vm.addCustomer}},[_vm._v(\"追 加\")])],1)],1)],1),_vm._l((_vm.customers),function(customer){return _c('div',{key:customer.customerno,staticClass:\"text item d-flex\",staticStyle:{\"justify-content\":\"space-between\"}},[_c('div',{staticStyle:{\"width\":\"120px\"}},[_vm._v(_vm._s(customer.customer))]),_c('div',[_vm._v(_vm._s(customer.customerType))]),_c('el-button',{attrs:{\"size\":\"mini\",\"type\":\"danger\",\"icon\":\"el-icon-delete\"},on:{\"click\":function($event){return _vm.deleteCustomer(customer.customerno)}}},[_vm._v(\"削除\")])],1)})],2)],1)],1)\n}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\r\n    <div style=\"text-align: left;\">\r\n        <div class=\"h4\" style=\"font-weight: 700;text-align:left\">カテゴリー管理</div>\r\n        <el-divider></el-divider>\r\n        <!-- 功能取消 -->\r\n        <!-- <p>ファイル保存先フォルダ設定</p>\r\n        <el-input v-model=\"path\" placeholder=\"输入或选择路径\" style=\"width: 300px;\"></el-input>\r\n        <el-button @click=\"triggerFileInput\">\r\n            <input type=\"file\" style=\"display: none;\" ref=\"fileInput\" directory webkitdirectory mozdirectory msdirectory\r\n                odirectory @change=\"handleFolderChange\">\r\n            パス選択</el-button>\r\n            <el-button @click=\"editPath\" :disabled=\"editPathBt\">決 定</el-button>\r\n        <el-divider></el-divider> -->\r\n        <div class=\"d-flex\" style=\"justify-content: space-around\">\r\n            <!-- 帳票種類一覧と編集 -->\r\n            <el-card class=\"box-card\">\r\n                <div slot=\"header\" class=\"clearfix\">\r\n                    <span>帳票種類</span>\r\n                    <el-button style=\"float: right; padding: 3px 0\" type=\"text\" @click=\"addBillType\">新規</el-button>\r\n                </div>\r\n                <div v-for=\"billType in billTypes\" :key=\"billType.billTypeno\" class=\"text item d-flex \"\r\n                    style=\"justify-content: space-between\">\r\n                    <div>{{billType.billType}}</div>\r\n                    <el-button size=\"mini\" type=\"danger\" icon=\"el-icon-delete\"\r\n                        @click=\"deleteBillType(billType.billTypeno)\">削除</el-button>\r\n                </div>\r\n            </el-card>\r\n            <!-- 取引先一覧と編集 -->\r\n            <el-card class=\"box-card\">\r\n                <div slot=\"header\" class=\"clearfix\">\r\n                    <span>取引先</span>\r\n                    <el-button style=\"float: right; padding: 3px 0\" type=\"text\"\r\n                        @click=\"dialogFormVisible= true\">新規</el-button>\r\n                    <el-dialog title=\"取引先新規\" :visible.sync=\"dialogFormVisible\" @closed=\"customerInit\">\r\n                        <el-form :model=\"customer\">\r\n                            <el-form-item label=\"取引先\">\r\n                                <span class=\"text-danger\" style=\"font-size: 12px;\" v-if=\"flag1\">取引先を入力してください</span>\r\n                                <el-input v-model=\"customer.customer\" autocomplete=\"off\"\r\n                                    @blur=\"customerBlur\"></el-input>\r\n                            </el-form-item>\r\n                            <el-form-item label=\"取引先種類\">\r\n                                <span class=\"text-danger\" style=\"font-size: 12px;\" v-if=\"flag2\">取引先種類を入力してください</span>\r\n                                <el-select v-model=\"customer.customerType\" filterable allow-create default-first-option\r\n                                    class=\"w-100\" placeholder=\"取引先種類を選択してください\">\r\n                                    <el-option v-for=\"customerType in customerTypes\" :key=\"customerType.customerType\"\r\n                                        :label=\"customerType.customerType\" :value=\"customerType.customerType\">\r\n                                    </el-option>\r\n                                </el-select>\r\n                            </el-form-item>\r\n                        </el-form>\r\n                        <div slot=\"footer\" class=\"dialog-footer\">\r\n                            <el-button @click=\"dialogFormVisible = false\">キャンセル</el-button>\r\n                            <el-button type=\"primary\" @click=\"addCustomer\" :disabled=\"addCustomerBt\">追 加</el-button>\r\n                        </div>\r\n                    </el-dialog>\r\n                </div>\r\n                <div v-for=\"customer in customers\" :key=\"customer.customerno\" class=\"text item d-flex \"\r\n                    style=\"justify-content: space-between\">\r\n                    <div style=\"width: 120px;\">{{customer.customer}}</div>\r\n                    <div>{{customer.customerType}}</div>\r\n                    <el-button size=\"mini\" type=\"danger\" icon=\"el-icon-delete\"\r\n                        @click=\"deleteCustomer(customer.customerno)\">削除</el-button>\r\n                </div>\r\n            </el-card> \r\n        </div>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\n    export default {\r\n        data() {\r\n            return {\r\n                path: '',\r\n                dialogFormVisible: false,\r\n                flag1: false,\r\n                flag2: false,\r\n                billType: {\r\n                    billType: ''\r\n                },\r\n                customer: {\r\n                    customer: '',\r\n                    customerType: ''\r\n                },\r\n                customerTypes: [],\r\n                billTypes: [],\r\n                customers: []\r\n            }\r\n        },\r\n        name: 'categoryView',\r\n        computed: {\r\n            addCustomerBt() {\r\n                return this.customer.customer === '' || this.customer.customerType === ''\r\n            },\r\n            // editPathBt(){\r\n            //     return this.path === ''\r\n            // }\r\n        },\r\n        created() {\r\n            this.billsInit()\r\n            this.costumersInit()\r\n            this.customerTypesInit()\r\n        },\r\n        methods: {\r\n            // editPath(){\r\n\r\n            // },\r\n            costumersInit() {\r\n                this.$http.get('/category/getCustomers')\r\n                    .then(res => {\r\n                        this.customers = res.data.data\r\n                    })\r\n            },\r\n            customerTypesInit() {\r\n                this.$http.get('/category/getCustomerTypes')\r\n                    .then(res => {\r\n                        this.customerTypes = res.data.data\r\n                    })\r\n            },\r\n            customerBlur() {\r\n                if (this.customer.customer === '') {\r\n                    this.flag1 = true\r\n                } else {\r\n                    this.flag1 = false\r\n                }\r\n            },\r\n            deleteCustomer(customerno) {\r\n                this.$confirm('これで取引先は完全に削除されます，続きますが？', '取引先を消しますが？', {\r\n                    confirmButtonText: '続く',\r\n                    cancelButtonText: 'キャンセル',\r\n                    type: 'warning'\r\n                }).then(() => {\r\n                    this.$http.get('/category/deleteCustomer/' + customerno)\r\n                        .then(res => {\r\n                            if (res.data.code === 200) {\r\n                                this.$message({\r\n                                    type: 'success',\r\n                                    message: '削除成功'\r\n                                });\r\n                                this.customerInit()\r\n                            }\r\n                        })\r\n                }).catch(() => { });\r\n            },\r\n\r\n            addCustomer() {\r\n                let flag1 = false;\r\n                this.customerTypes.forEach(customer => {\r\n                    if (this.customer.customerType === customer.customerType) {\r\n                        flag1 = true\r\n                    }\r\n                });\r\n                if (!flag1) {\r\n                    this.$confirm('入力した取引先は今のない取引先です。', '取引先を新規しますか？', {\r\n                        confirmButtonText: '新規',\r\n                        cancelButtonText: 'キャンセル',\r\n                        type: 'warning'\r\n                    }).then(() => {\r\n                        this.addCustomerSend()\r\n                    })\r\n                } else {\r\n                    this.addCustomerSend()\r\n                }\r\n            },\r\n            addCustomerSend() {\r\n                this.$http.post('/category/addCustomer', this.customer)\r\n                    .then(res => {\r\n                        if (res.data.code === 200) {\r\n                            this.$message({\r\n                                type: 'success',\r\n                                message: '新規成功'\r\n                            });\r\n                            this.costomersInit()\r\n                            this.costomerInit()\r\n                        }\r\n                    })\r\n                this.dialogFormVisible = false\r\n            },\r\n            deleteBillType(billTypeno) {\r\n                this.$confirm('これで帳票種類は完全に削除されます，続きますが？', '帳票種類を消しますが？', {\r\n                    confirmButtonText: '続く',\r\n                    cancelButtonText: 'キャンセル',\r\n                    type: 'warning'\r\n                }).then(() => {\r\n                    this.$http.get('/category/deleteBillType/' + billTypeno)\r\n                        .then(res => {\r\n                            if (res.data.code === 200) {\r\n                                this.$message({\r\n                                    type: 'success',\r\n                                    message: '削除成功'\r\n                                });\r\n                                this.billsInit()\r\n                            }\r\n                        })\r\n                }).catch(() => { });\r\n            },\r\n            addBillType() {\r\n                this.$prompt('帳票種類を入力ください', '帳票種類新規', {\r\n                    confirmButtonText: '追加',\r\n                    cancelButtonText: 'キャンセル',\r\n                }).then(({ value }) => {\r\n                    if (value == null || value === '') {\r\n                        this.$message({\r\n                            type: 'warning',\r\n                            message: '帳票種類を入力ください'\r\n                        });\r\n                        return\r\n                    }\r\n                    this.$http.get('/category/addBillType/' + value)\r\n                        .then(res => {\r\n                            if (res.data.code === 200) {\r\n                                this.$message({\r\n                                    type: 'success',\r\n                                    message: '新規成功'\r\n                                });\r\n                                this.billsInit()\r\n                            }\r\n                        })\r\n                }).catch(() => { });\r\n            },\r\n            handleFolderChange(e) {\r\n                const path = e.target.files[0].path\r\n                this.path = path\r\n            },\r\n            triggerFileInput() {\r\n                this.$refs.fileInput.click();\r\n            },\r\n            billsInit() {\r\n                this.$http.get('/category/getBillTypes')\r\n                    .then(res => {\r\n                        this.billTypes = res.data.data\r\n                    })\r\n            },\r\n            costomersInit() {\r\n                this.$http.get('/category/getCustomers')\r\n                    .then(res => {\r\n                        this.customers = res.data.data\r\n                    })\r\n            },\r\n            customerInit() {\r\n                this.customer.customer = '',\r\n                    this.customer.customerType = ''\r\n            }\r\n\r\n        }\r\n    }\r\n\r\n</script>\r\n\r\n<style scoped>\r\n    .text {\r\n        font-size: 14px;\r\n    }\r\n\r\n    .item {\r\n        margin-bottom: 18px;\r\n    }\r\n\r\n    .clearfix:before,\r\n    .clearfix:after {\r\n        display: table;\r\n        content: \"\";\r\n    }\r\n\r\n    .clearfix:after {\r\n        clear: both\r\n    }\r\n\r\n    .box-card {\r\n        width: 480px;\r\n    }\r\n</style>","import mod from \"-!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js??clonedRuleSet-40.use[1]!../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./category.vue?vue&type=script&lang=js\"; export default mod; export * from \"-!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js??clonedRuleSet-40.use[1]!../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./category.vue?vue&type=script&lang=js\"","import { render, staticRenderFns } from \"./category.vue?vue&type=template&id=7694e381&scoped=true\"\nimport script from \"./category.vue?vue&type=script&lang=js\"\nexport * from \"./category.vue?vue&type=script&lang=js\"\nimport style0 from \"./category.vue?vue&type=style&index=0&id=7694e381&prod&scoped=true&lang=css\"\n\n\n/* normalize component */\nimport normalizer from \"!../../node_modules/@vue/vue-loader-v15/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"7694e381\",\n  null\n  \n)\n\nexport default component.exports"],"names":["render","_vm","this","_c","_self","staticStyle","staticClass","_v","attrs","slot","on","addBillType","_l","billTypes","billType","key","billTypeno","_s","$event","deleteBillType","dialogFormVisible","customerInit","customer","flag1","_e","customerBlur","model","value","callback","$$v","$set","expression","flag2","customerType","customerTypes","addCustomerBt","addCustomer","customers","customerno","deleteCustomer","staticRenderFns","data","path","name","computed","created","billsInit","costumersInit","customerTypesInit","methods","$http","get","then","res","$confirm","confirmButtonText","cancelButtonText","type","code","$message","message","catch","forEach","addCustomerSend","post","costomersInit","costomerInit","$prompt","handleFolderChange","e","target","files","triggerFileInput","$refs","fileInput","click","component"],"sourceRoot":""}