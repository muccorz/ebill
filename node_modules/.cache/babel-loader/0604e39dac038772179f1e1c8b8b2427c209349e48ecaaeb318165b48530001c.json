{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nexport default {\n  name: 'LoginView',\n  data() {\n    return {\n      // ユーザー情報\n      user: {\n        name: '',\n        password: ''\n      },\n      // バリデーションフラグ\n      flag1: false,\n      flag2: false,\n      handleLogin: false\n    };\n  },\n  methods: {\n    // ユーザー名のバリデーション\n    handleName() {\n      if (this.user.name == '') {\n        this.flag1 = true;\n      } else {\n        this.flag1 = false;\n      }\n      if (!this.flag1 & !this.flag2) {\n        this.handleLogin = true;\n      }\n    },\n    // パスワードのバリデーション\n    handlePassword() {\n      if (this.user.password == '') {\n        this.flag2 = true;\n      } else {\n        this.flag2 = false;\n      }\n      if (!this.flag1 & !this.flag2) {\n        this.handleLogin = true;\n      }\n    },\n    // ログイン処理\n    login() {\n      if (this.flag1 || this.flag2) {\n        this.handleLogin = true;\n      }\n      this.$axios.post('/api/login', this.user)\n      // ログイン成功，ホーム画面へ遷移\n      .then(() => {\n        this.$router.push({\n          name: 'HomeView'\n        });\n      })\n      // ログイン失敗，エラーメッセージを表示\n      .catch(error => {\n        console.log(error);\n      });\n    }\n  }\n};","map":{"version":3,"names":["name","data","user","password","flag1","flag2","handleLogin","methods","handleName","handlePassword","login","$axios","post","then","$router","push","catch","error","console","log"],"sources":["src/views/login.vue"],"sourcesContent":["<template>\r\n  <div id=\"app\">\r\n    <div class=\"d-flex h-100 position-absolute w-100 align-items-center justify-content-center\">\r\n      <el-card class=\"box-card\">\r\n        <div slot=\"header\" class=\"clearfix\">\r\n          <span>ユーザーログイン</span>\r\n        </div>\r\n        <el-form ref=\"form\" >\r\n          <el-form-item label=\"ユーザー名\">\r\n            <span class=\"text-danger\" style=\"font-size: 12px;\" v-if=\"flag1\">ユーザー名を入力してください</span>\r\n            <el-input v-model=\"user.name\" placeholder=\"ユーザー名を入力してください\" @blur=\"handleName\"></el-input>\r\n          </el-form-item>\r\n          <el-form-item label=\"パスワード\">\r\n            <span class=\"text-danger\" style=\"font-size: 12px;\" v-if=\"flag2\">パスワードを入力してください</span>\r\n            <el-input v-model=\"user.password\" placeholder=\"パスワードを入力してください\" show-password @blur=\"handlePassword\"></el-input>\r\n          </el-form-item>\r\n          <el-form-item>\r\n            <el-button type=\"primary\" @click=\"login\" @disabled=\"handleLogin\">ログイン</el-button>\r\n          </el-form-item>\r\n        </el-form>\r\n      </el-card>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\n  export default {\r\n    name: 'LoginView',\r\n    data() {\r\n      return {\r\n        // ユーザー情報\r\n        user:{\r\n          name: '',\r\n          password: ''\r\n        },\r\n        // バリデーションフラグ\r\n        flag1:false,\r\n        flag2:false,\r\n        handleLogin: false,\r\n      }\r\n    },\r\n    methods: {\r\n      // ユーザー名のバリデーション\r\n      handleName(){\r\n        if(this.user.name == ''){\r\n          this.flag1 = true\r\n        }else{\r\n          this.flag1 = false\r\n        }\r\n        if (!this.flag1 & !this.flag2) {\r\n          this.handleLogin=true;\r\n        }\r\n      },\r\n      // パスワードのバリデーション\r\n      handlePassword(){\r\n        if(this.user.password == ''){\r\n          this.flag2 = true\r\n        }else{\r\n          this.flag2 = false\r\n        }\r\n        if (!this.flag1 & !this.flag2) {\r\n          this.handleLogin=true;\r\n        }\r\n      },\r\n      // ログイン処理\r\n      login() {\r\n        if (this.flag1 || this.flag2) {\r\n          this.handleLogin=true;\r\n        }\r\n        this.$axios.post('/api/login', this.user)\r\n        // ログイン成功，ホーム画面へ遷移\r\n          .then(() => {\r\n            this.$router.push({name: 'HomeView'})\r\n          })\r\n          // ログイン失敗，エラーメッセージを表示\r\n          .catch((error) => {\r\n            console.log(error)\r\n          })\r\n      }\r\n    }\r\n  }\r\n</script>\r\n\r\n<style>\r\n.text {\r\n    font-size: 14px;\r\n  }\r\n\r\n  .item {\r\n    margin-bottom: 18px;\r\n  }\r\n\r\n  .clearfix:before,\r\n  .clearfix:after {\r\n    display: table;\r\n    content: \"\";\r\n  }\r\n  .clearfix:after {\r\n    clear: both\r\n  }\r\n\r\n  .box-card {\r\n    width: 480px;\r\n  }\r\n</style>"],"mappings":";AA0BA;EACAA,IAAA;EACAC,KAAA;IACA;MACA;MACAC,IAAA;QACAF,IAAA;QACAG,QAAA;MACA;MACA;MACAC,KAAA;MACAC,KAAA;MACAC,WAAA;IACA;EACA;EACAC,OAAA;IACA;IACAC,WAAA;MACA,SAAAN,IAAA,CAAAF,IAAA;QACA,KAAAI,KAAA;MACA;QACA,KAAAA,KAAA;MACA;MACA,UAAAA,KAAA,SAAAC,KAAA;QACA,KAAAC,WAAA;MACA;IACA;IACA;IACAG,eAAA;MACA,SAAAP,IAAA,CAAAC,QAAA;QACA,KAAAE,KAAA;MACA;QACA,KAAAA,KAAA;MACA;MACA,UAAAD,KAAA,SAAAC,KAAA;QACA,KAAAC,WAAA;MACA;IACA;IACA;IACAI,MAAA;MACA,SAAAN,KAAA,SAAAC,KAAA;QACA,KAAAC,WAAA;MACA;MACA,KAAAK,MAAA,CAAAC,IAAA,oBAAAV,IAAA;MACA;MAAA,CACAW,IAAA;QACA,KAAAC,OAAA,CAAAC,IAAA;UAAAf,IAAA;QAAA;MACA;MACA;MAAA,CACAgB,KAAA,CAAAC,KAAA;QACAC,OAAA,CAAAC,GAAA,CAAAF,KAAA;MACA;IACA;EACA;AACA"},"metadata":{},"sourceType":"module","externalDependencies":[]}