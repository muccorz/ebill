{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nexport default {\n  name: 'billView',\n  data() {\n    return {\n      drawerflag: false,\n      multipleSelection: [],\n      //条件付き検索部分の機能\n      reviewBt: false,\n      newBt: false,\n      downloadBt: false,\n      customers: [],\n      billStyles: [],\n      updateUserIds: [],\n      updateUserIdsState: '',\n      billStylesState: '',\n      customersState: '',\n      timeout: null,\n      date: '',\n      //帳票詳細\n      bill: {\n        billType: '',\n        customer: '',\n        remark: '',\n        transactAmount: '',\n        transactionymd: '',\n        updateuserid: '',\n        updateymd: '',\n        imageUrl: '',\n        Logs: []\n      },\n      //帳票一覧\n      billTableData: [{\n        billno: \"B2394-0001\",\n        transactionymd: '2023/11/26',\n        transactAmount: \"￥59999.00\",\n        customer: 'OJO株式会社',\n        billType: '请求書'\n      }, {\n        billno: \"B2394-0002\",\n        transactionymd: '2023/11/25',\n        transactAmount: \"￥116455.00\",\n        customer: 'FGD株式会社',\n        billType: '収入書'\n      }, {\n        billno: 'B2394-0003',\n        transactionymd: '2023/11/24',\n        transactAmount: \"￥99999.00\",\n        customer: 'CBO株式会社',\n        billType: '受け書'\n      }],\n      condition: {\n        date: [],\n        transactAmountFrom: '',\n        transactAmountTo: '',\n        customer: '',\n        billType: '',\n        updateUserId: ''\n      }\n    };\n  },\n  methods: {\n    //帳票詳細をクリアする\n    clearBill() {\n      this.bill = {\n        billType: '',\n        customer: '',\n        remark: '',\n        transactAmount: '',\n        transactionymd: '',\n        updateuserid: '',\n        updateymd: '',\n        imageUrl: '',\n        Logs: []\n      };\n    },\n    //帳票データを取得する\n    getBills() {\n      // this.$http.get('/api/bill/list').then(res => {\n      //     if (res.date.code == 200) {\n      //         this.billTableData = res.data.data;\n      //     }\n      // });\n    },\n    //チェックボックスを選択する\n    handleSelectionChange(val) {\n      this.multipleSelection = val;\n    },\n    //検索ボタン\n    search() {\n      // this.$http.post('/api/bill/list', this.condition).then(res => {\n      //     if (res.date.code == 200) {\n      //         this.billTableData = res.data.data;\n      //     }\n      // });\n    },\n    //クリアボタン\n    clear() {\n      this.condition = {\n        date: '',\n        moneyMin: '',\n        moneyMax: '',\n        customer: '',\n        billType: '',\n        updateuserid: ''\n      };\n    },\n    //承認待ちボタン\n    onSubmit() {\n      // this.$http.get('/api/bill/list').then(res => {\n      //     if (res.date.code == 200) {\n      //         this.billTableData = res.data.data;\n      //     }\n      // });\n    },\n    //新規ボタン\n    create() {\n      this.$router.push({\n        path: '/edit'\n      });\n    },\n    //ダウンロードボタン\n    download() {\n      this.$message({\n        message: 'ダウンロード',\n        type: 'success'\n      });\n    },\n    //当帳票の詳細を表示する\n    handleRowClick() {\n      // this.$http.get('/api/bill/detail').then(res => {\n      //     if (res.date.code == 200) {\n      //         this.bill = res.data.data;\n      //     }\n      // });\n      this.bill.billType = '受け書';\n      this.bill.customer = 'CBO株式会社';\n      this.bill.remark = '当帳票の詳細を表示する';\n      this.bill.transactAmount = '￥99999.00';\n      this.bill.transactionymd = '2023/11/24';\n      this.bill.updateuserid = 'admin';\n      this.bill.updateymd = '2023/11/24';\n      this.bill.Logs = [{\n        date: '2023/11/26',\n        money: \"￥59999.00\",\n        custom: 'OJO株式会社',\n        paper: '请求書',\n        log: '承認待ち',\n        date2: '2023/11/26',\n        user: 'admin'\n      }, {\n        date: '2023/11/25',\n        money: \"￥116455.00\",\n        custom: 'FGD株式会社',\n        paper: '収入書',\n        log: '承認待ち',\n        date2: '2023/11/25',\n        user: 'admin'\n      }, {\n        date: '2023/11/24',\n        money: \"￥99999.00\",\n        custom: 'CBO株式会社',\n        paper: '受け書',\n        log: '承認待ち',\n        date2: '2023/11/24',\n        user: 'admin'\n      }];\n      this.drawerflag = true;\n    },\n    handleAvatarSuccess() {\n      this.bill.imageUrl = \"https://solution.fielding.co.jp/application/files/6516/3910/2834/column-3.png\";\n    },\n    //サーバーからデータを取得する\n    loadCustomers() {\n      return [{\n        \"customer\": \"三全鲜食（北新泾店）\"\n      }, {\n        \"customer\": \"Hot honey 首尔炸鸡（仙霞路）\"\n      }];\n      // this.$http.get('/api/customer/list').then(res => {\n      //     if (res.date.code == 200) {\n      //         this.customer = res.data.data;\n      //     }\n      // });\n    },\n\n    loadBillStyles() {\n      return [{\n        \"billStyle\": \"胖仙女纸杯蛋糕（上海凌空店）\",\n        \"address\": \"上海市长宁区金钟路968号1幢18号楼一层商铺18-101\"\n      }, {\n        \"billStyle\": \"贡茶\",\n        \"address\": \"上海市长宁区金钟路633号\"\n      }];\n      // this.$http.get('/api/billStyle/list').then(res => {\n      //     if (res.date.code == 200) {\n      //         this.billStyle = res.data.data;\n      //     }\n      // });\n    },\n\n    loadUpdateUserIds() {\n      return [{\n        \"updateUsername\": \"茶芝兰（奶茶，手抓饼）\",\n        \"updateUserId\": \"上海市普陀区同普路1435号\"\n      }, {\n        \"updateUsername\": \"十二泷町\",\n        \"updateUserId\": \"上海市北翟路1444弄81号B幢-107\"\n      }];\n      // this.$http.get('/api/updateUserId/list').then(res => {\n      //     if (res.date.code == 200) {\n      //         this.updateUserId = res.data.data;\n      //     }\n      // });\n    },\n\n    //入力ボックスからデータを検索\n    customerQuerySearchAsync(queryString, cb) {\n      var customers = this.customers;\n      log(customers);\n      var results = queryString ? customers.filter(this.customersStateFilter(queryString)) : customers;\n      clearTimeout(this.timeout);\n      this.timeout = setTimeout(() => {\n        cb(results);\n      }, 3000 * Math.random());\n    },\n    billStyleQuerySearchAsync(queryString, cb) {\n      var billStyles = this.billStyles;\n      var results = queryString ? billStyles.filter(this.billStylesStateFilter(queryString)) : billStyles;\n      clearTimeout(this.timeout);\n      this.timeout = setTimeout(() => {\n        cb(results);\n      }, 3000 * Math.random());\n    },\n    updateUserIdQuerySearchAsync(queryString, cb) {\n      var updateUserIds = this.updateUserIds;\n      var results = queryString ? updateUserIds.filter(this.updateUserIdsStateFilter(queryString)) : updateUserIds;\n      clearTimeout(this.timeout);\n      this.timeout = setTimeout(() => {\n        cb(results);\n      }, 3000 * Math.random());\n    },\n    //検索条件を作成する\n    customersStateFilter(queryString) {\n      return state => {\n        return state.customer.toLowerCase().indexOf(queryString.toLowerCase()) === 0;\n      };\n    },\n    billStylesStateFilter(queryString) {\n      return state => {\n        return state.billStyle.toLowerCase().indexOf(queryString.toLowerCase()) === 0;\n      };\n    },\n    updateUserIdsStateFilter(queryString) {\n      return state => {\n        return state.updateUsername.toLowerCase().indexOf(queryString.toLowerCase()) === 0;\n      };\n    },\n    //入力データをバンティングする\n    handleSelect(item) {\n      console.log(item);\n      if (item.customer != null) {\n        this.condition.customer = item.customer;\n      } else if (item.billType != null) {\n        this.condition.billType = item.billType;\n      } else if (item.updateuserid != null) {\n        this.condition.updateuserid = item.updateuserid;\n      }\n    }\n  },\n  //画面がロードされたら、取引先などのデータを取得する\n  mounted() {\n    this.customers = this.loadCustomers();\n    this.billStyles = this.loadBillStyles();\n    this.updateUserIds = this.loadUpdateUserIds();\n    var rolesno = sessionStorage.getItem(\"rolesno\");\n    switch (rolesno) {\n      case '1':\n        this.reviewBt = false;\n        this.newBt = true;\n        this.downloadBt = false;\n        break;\n      case '2':\n        this.reviewBt = false;\n        this.newBt = false;\n        this.downloadBt = true;\n        break;\n      case '3':\n        this.reviewBt = true;\n        this.newBt = false;\n        this.downloadBt = true;\n        break;\n      case \"4\":\n        this.reviewBt = true;\n        this.newBt = true;\n        this.downloadBt = true;\n        break;\n    }\n  }\n};","map":{"version":3,"names":["name","data","drawerflag","multipleSelection","reviewBt","newBt","downloadBt","customers","billStyles","updateUserIds","updateUserIdsState","billStylesState","customersState","timeout","date","bill","billType","customer","remark","transactAmount","transactionymd","updateuserid","updateymd","imageUrl","Logs","billTableData","billno","condition","transactAmountFrom","transactAmountTo","updateUserId","methods","clearBill","getBills","handleSelectionChange","val","search","clear","moneyMin","moneyMax","onSubmit","create","$router","push","path","download","$message","message","type","handleRowClick","money","custom","paper","log","date2","user","handleAvatarSuccess","loadCustomers","loadBillStyles","loadUpdateUserIds","customerQuerySearchAsync","queryString","cb","results","filter","customersStateFilter","clearTimeout","setTimeout","Math","random","billStyleQuerySearchAsync","billStylesStateFilter","updateUserIdQuerySearchAsync","updateUserIdsStateFilter","state","toLowerCase","indexOf","billStyle","updateUsername","handleSelect","item","console","mounted","rolesno","sessionStorage","getItem"],"sources":["src/views/search.vue"],"sourcesContent":["<template>\r\n    <div>\r\n        <div class=\"h4\" style=\"font-weight: 700;text-align:left\">電子取引管理</div>\r\n        <el-divider></el-divider>\r\n        <!-- 条件付き検索 -->\r\n        <el-row :gutter=\"20\">\r\n            <el-col :span=\"16\">\r\n                <el-form :inline=\"true\" :model=\"condition\" class=\"demo-form-inline \">\r\n                    <el-form-item label=\"取引年月日\">\r\n                        <el-date-picker v-model=\"condition.date\" type=\"daterange\" range-separator=\"~\"\r\n                            start-placeholder=\"開始日\" end-placeholder=\"終了日\">\r\n                        </el-date-picker>\r\n                    </el-form-item>&nbsp;\r\n                    <el-form-item label=\"取引金額範囲\">\r\n                        <el-input v-model=\"condition.transactAmountFrom\" placeholder=\"￥\"\r\n                            style=\"width: 100px;\"></el-input>\r\n                    </el-form-item>\r\n                    <el-form-item label=\"\">~</el-form-item>\r\n                    <el-form-item label=\"\">\r\n                        <el-input v-model=\"condition.transactAmountTo\" placeholder=\"￥\" style=\"width: 100px;\"></el-input>\r\n                    </el-form-item>\r\n                    <br>\r\n                    <el-form-item label=\"取引先\">\r\n                        <el-autocomplete v-model=\"customersState\" :fetch-suggestions=\"customerQuerySearchAsync\"\r\n                            placeholder=\"入力又は選択\" @select=\"handleSelect\"></el-autocomplete>\r\n                    </el-form-item>\r\n\r\n                    <el-form-item label=\"帳票種類\">\r\n                        <el-autocomplete v-model=\"billStylesState\" :fetch-suggestions=\"billStyleQuerySearchAsync\"\r\n                            style=\"width: 120px;\" placeholder=\"入力又は選択\" @select=\"handleSelect\"></el-autocomplete>\r\n                    </el-form-item>&nbsp;\r\n                    <el-form-item label=\"登録ユーザー\">\r\n                        <el-autocomplete v-model=\"updateUserIdsState\" :fetch-suggestions=\"updateUserIdQuerySearchAsync\"\r\n                            style=\"width: 120px;\" placeholder=\"入力又は選択\" @select=\"handleSelect\"></el-autocomplete>\r\n                    </el-form-item>\r\n                </el-form>\r\n            </el-col>\r\n            <el-col :span=\"8\" class=\"\" style=\"padding-right: 200px;\">\r\n                <el-button type=\"primary\" @click=\"search\">查 询</el-button>\r\n                <el-button type=\"warning\" @click=\"clear\">清 空</el-button>\r\n                <p></p>\r\n                <el-button type=\"primary\" @click=\"onSubmit\" v-if=\"reviewBt\">承認待ち</el-button>\r\n                <el-button type=\"primary\" @click=\"create\" v-if=\"newBt\">新 規</el-button>\r\n                <el-button type=\"primary\" @click=\"download\" v-if=\"downloadBt\">ダウンロード</el-button>\r\n            </el-col>\r\n        </el-row>\r\n\r\n        <!-- 帳票テーブル -->\r\n        <el-table :data=\"billTableData\" style=\"width: 100%\" @selection-change=\"handleSelectionChange\"\r\n            @row-click=\"handleRowClick\">\r\n            <el-table-column type=\"selection\"></el-table-column>\r\n            <el-table-column prop=\"billno\" label=\"帳票番号\">\r\n            </el-table-column>\r\n            <el-table-column prop=\"transactionymd\" label=\"取引年月日\">\r\n            </el-table-column>\r\n            <el-table-column prop=\"transactAmount\" label=\"取引金額\">\r\n            </el-table-column>\r\n            <el-table-column prop=\"customer\" label=\"取引先\">\r\n            </el-table-column>\r\n            <el-table-column prop=\"billType\" label=\"帳票種類\">\r\n            </el-table-column>\r\n        </el-table>\r\n\r\n        <!-- 帳票詳細drawer -->\r\n\r\n        <el-drawer title=\"帳票詳細\" :visible.sync=\"drawerflag\" size=\"80%\" @closed=\"clearBill\">\r\n            <div style=\"margin: 30px 100px; \" class=\"d-flex\">\r\n                <div style=\"width: 44%;\">\r\n                    <el-form ref=\"form\" :model=\"bill\" label-width=\"120px\" :disabled=\"true\">\r\n                        <el-form-item label=\"ts0056-126\"></el-form-item>\r\n                        <el-form-item label=\"取引年月日\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\r\n                            <el-input v-model=\"bill.transactionymd\" style=\"width: 85%;\"></el-input>\r\n                        </el-form-item>\r\n                        <el-form-item label=\"取引金額\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\r\n                            <el-input v-model=\"bill.transactAmount\" style=\"width: 85%;\"></el-input>\r\n                        </el-form-item>\r\n                        <el-form-item label=\"取引先\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\r\n                            <el-input v-model=\"bill.customer\" style=\"width: 85%;\"></el-input>\r\n                        </el-form-item>\r\n                        <el-form-item label=\"帳票種類\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\r\n                            <el-input v-model=\"bill.billType\" style=\"width: 85%;\"></el-input>\r\n                        </el-form-item>\r\n                        <el-form-item label=\"訂正備考\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\r\n                            <el-input type=\"textarea\" :rows=\"3\" v-model=\"bill.remark\" style=\"width: 85%;\"></el-input>\r\n                        </el-form-item>\r\n                        <el-form-item label=\"登録日時\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\r\n                            <el-input v-model=\"bill.updateymd\" style=\"width: 85%;\"></el-input>\r\n                        </el-form-item>\r\n                        <el-form-item label=\"登録ユーザー\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\r\n                            <el-input v-model=\"bill.updateuserid\" style=\"width: 85%;\"></el-input>\r\n                        </el-form-item>\r\n                    </el-form>\r\n                    <el-button size=\"medium\" type=\"primary\">承認</el-button>\r\n                    <el-button size=\"medium\" type=\"warning\">拒否</el-button>\r\n                </div>\r\n                <el-upload class=\"avatar-uploader\" action=\"http://127.0.0.1:8081\" :show-file-list=\"false\"\r\n                    :on-error=\"handleAvatarSuccess\">\r\n                    <embed v-if=\"bill.imageUrl\" :src=\"bill.imageUrl\" type=\"application/pdf\" width=\"50%\" height=\"70%\"\r\n                        style=\"position: absolute; top: 5%; right: 2%;\">\r\n                    <i v-else class=\"el-icon-plus avatar-uploader-icon\"></i>\r\n                </el-upload>\r\n            </div>\r\n            <el-table :data=\"bill.Logs\" :border=\"true\" style=\"width: 80%;margin-top: 4%;margin-left: 3%;\">\r\n                <el-table-column prop=\"date\" label=\"取引年月日\">\r\n                </el-table-column>\r\n                <el-table-column prop=\"money\" label=\"取引金額\">\r\n                </el-table-column>\r\n                <el-table-column prop=\"custom\" label=\"取引先\">\r\n                </el-table-column>\r\n                <el-table-column prop=\"paper\" label=\"帳票種類\">\r\n                </el-table-column>\r\n                <el-table-column prop=\"log\" label=\"訂正備考\">\r\n                </el-table-column>\r\n                <el-table-column prop=\"date2\" label=\"登録日時\">\r\n                </el-table-column>\r\n                <el-table-column prop=\"user\" label=\"登録ユーザー\">\r\n                </el-table-column>\r\n            </el-table>\r\n        </el-drawer>\r\n        <!-- <div class=\"block\">\r\n            <el-pagination @current-change=\"handleCurrentChange\" :current-page.sync=\"currentPage\" :page-size=\"pagesize\"\r\n                layout=\"total, prev, pager, next, jumper\" :total=\"total\">\r\n            </el-pagination>\r\n        </div>  -->\r\n    </div>\r\n</template>\r\n\r\n<script>\r\n    export default {\r\n        name: 'billView',\r\n        data() {\r\n            return {\r\n                drawerflag: false,\r\n                multipleSelection: [],\r\n                //条件付き検索部分の機能\r\n                reviewBt: false,\r\n                newBt: false,\r\n                downloadBt: false,\r\n                customers: [],\r\n                billStyles: [],\r\n                updateUserIds: [],\r\n                updateUserIdsState: '',\r\n                billStylesState: '',\r\n                customersState: '',\r\n                timeout: null,\r\n                date: '',\r\n\r\n                //帳票詳細\r\n                bill: {\r\n                    billType: '',\r\n                    customer: '',\r\n                    remark: '',\r\n                    transactAmount: '',\r\n                    transactionymd: '',\r\n                    updateuserid: '',\r\n                    updateymd: '',\r\n                    imageUrl: '',\r\n                    Logs: [],\r\n                },\r\n\r\n                //帳票一覧\r\n                billTableData: [\r\n                    {\r\n                        billno: \"B2394-0001\",\r\n                        transactionymd: '2023/11/26',\r\n                        transactAmount: \"￥59999.00\",\r\n                        customer: 'OJO株式会社',\r\n                        billType: '请求書',\r\n                    },\r\n                    {\r\n                        billno: \"B2394-0002\",\r\n                        transactionymd: '2023/11/25',\r\n                        transactAmount: \"￥116455.00\",\r\n                        customer: 'FGD株式会社',\r\n                        billType: '収入書'\r\n                    },\r\n                    {\r\n                        billno: 'B2394-0003',\r\n                        transactionymd: '2023/11/24',\r\n                        transactAmount: \"￥99999.00\",\r\n                        customer: 'CBO株式会社',\r\n                        billType: '受け書'\r\n                    },\r\n                ],\r\n                condition: {\r\n                    date: [],\r\n                    transactAmountFrom: '',\r\n                    transactAmountTo: '',\r\n                    customer: '',\r\n                    billType: '',\r\n                    updateUserId: '',\r\n                },\r\n\r\n            }\r\n        },\r\n\r\n        methods: {\r\n            //帳票詳細をクリアする\r\n            clearBill() {\r\n                this.bill = {\r\n                    billType: '',\r\n                    customer: '',\r\n                    remark: '',\r\n                    transactAmount: '',\r\n                    transactionymd: '',\r\n                    updateuserid: '',\r\n                    updateymd: '',\r\n                    imageUrl: '',\r\n                    Logs: [],\r\n                };\r\n            },\r\n\r\n            //帳票データを取得する\r\n            getBills() {\r\n                // this.$http.get('/api/bill/list').then(res => {\r\n                //     if (res.date.code == 200) {\r\n                //         this.billTableData = res.data.data;\r\n                //     }\r\n                // });\r\n            },\r\n            //チェックボックスを選択する\r\n            handleSelectionChange(val) {\r\n                this.multipleSelection = val;\r\n            },\r\n            //検索ボタン\r\n            search() {\r\n                // this.$http.post('/api/bill/list', this.condition).then(res => {\r\n                //     if (res.date.code == 200) {\r\n                //         this.billTableData = res.data.data;\r\n                //     }\r\n                // });\r\n            },\r\n            //クリアボタン\r\n            clear() {\r\n                this.condition = {\r\n                    date: '',\r\n                    moneyMin: '',\r\n                    moneyMax: '',\r\n                    customer: '',\r\n                    billType: '',\r\n                    updateuserid: '',\r\n                };\r\n            },\r\n            //承認待ちボタン\r\n            onSubmit() {\r\n                // this.$http.get('/api/bill/list').then(res => {\r\n                //     if (res.date.code == 200) {\r\n                //         this.billTableData = res.data.data;\r\n                //     }\r\n                // });\r\n            },\r\n            //新規ボタン\r\n            create() {\r\n                this.$router.push({ path: '/edit' });\r\n            },\r\n            //ダウンロードボタン\r\n            download() {\r\n                this.$message({\r\n                    message: 'ダウンロード',\r\n                    type: 'success'\r\n                });\r\n            },\r\n            //当帳票の詳細を表示する\r\n            handleRowClick() {\r\n                // this.$http.get('/api/bill/detail').then(res => {\r\n                //     if (res.date.code == 200) {\r\n                //         this.bill = res.data.data;\r\n                //     }\r\n                // });\r\n                this.bill.billType = '受け書';\r\n                this.bill.customer = 'CBO株式会社';\r\n                this.bill.remark = '当帳票の詳細を表示する';\r\n                this.bill.transactAmount = '￥99999.00';\r\n                this.bill.transactionymd = '2023/11/24';\r\n                this.bill.updateuserid = 'admin';\r\n                this.bill.updateymd = '2023/11/24';\r\n                this.bill.Logs = [\r\n                    {\r\n                        date: '2023/11/26',\r\n                        money: \"￥59999.00\",\r\n                        custom: 'OJO株式会社',\r\n                        paper: '请求書',\r\n                        log: '承認待ち',\r\n                        date2: '2023/11/26',\r\n                        user: 'admin',\r\n                    },\r\n                    {\r\n                        date: '2023/11/25',\r\n                        money: \"￥116455.00\",\r\n                        custom: 'FGD株式会社',\r\n                        paper: '収入書',\r\n                        log: '承認待ち',\r\n                        date2: '2023/11/25',\r\n                        user: 'admin',\r\n                    },\r\n                    {\r\n                        date: '2023/11/24',\r\n                        money: \"￥99999.00\",\r\n                        custom: 'CBO株式会社',\r\n                        paper: '受け書',\r\n                        log: '承認待ち',\r\n                        date2: '2023/11/24',\r\n                        user: 'admin',\r\n                    },\r\n                ];\r\n                this.drawerflag = true;\r\n            },\r\n            handleAvatarSuccess() {\r\n                this.bill.imageUrl = \"https://solution.fielding.co.jp/application/files/6516/3910/2834/column-3.png\";\r\n            },\r\n            //サーバーからデータを取得する\r\n            loadCustomers() {\r\n                return [\r\n                    { \"customer\": \"三全鲜食（北新泾店）\" },\r\n                    { \"customer\": \"Hot honey 首尔炸鸡（仙霞路）\" }\r\n                ];\r\n                // this.$http.get('/api/customer/list').then(res => {\r\n                //     if (res.date.code == 200) {\r\n                //         this.customer = res.data.data;\r\n                //     }\r\n                // });\r\n            },\r\n            loadBillStyles() {\r\n                return [\r\n                    { \"billStyle\": \"胖仙女纸杯蛋糕（上海凌空店）\", \"address\": \"上海市长宁区金钟路968号1幢18号楼一层商铺18-101\" },\r\n                    { \"billStyle\": \"贡茶\", \"address\": \"上海市长宁区金钟路633号\" },\r\n                ];\r\n                // this.$http.get('/api/billStyle/list').then(res => {\r\n                //     if (res.date.code == 200) {\r\n                //         this.billStyle = res.data.data;\r\n                //     }\r\n                // });\r\n            },\r\n            loadUpdateUserIds() {\r\n                return [\r\n                    { \"updateUsername\": \"茶芝兰（奶茶，手抓饼）\", \"updateUserId\": \"上海市普陀区同普路1435号\" },\r\n                    { \"updateUsername\": \"十二泷町\", \"updateUserId\": \"上海市北翟路1444弄81号B幢-107\" },\r\n                ];\r\n                // this.$http.get('/api/updateUserId/list').then(res => {\r\n                //     if (res.date.code == 200) {\r\n                //         this.updateUserId = res.data.data;\r\n                //     }\r\n                // });\r\n            },\r\n            //入力ボックスからデータを検索\r\n            customerQuerySearchAsync(queryString, cb) {\r\n                var customers = this.customers;\r\n                log(customers);\r\n                var results = queryString ? customers.filter(this.customersStateFilter(queryString)) : customers;\r\n                clearTimeout(this.timeout);\r\n                this.timeout = setTimeout(() => {\r\n                    cb(results);\r\n                }, 3000 * Math.random());\r\n            },\r\n            billStyleQuerySearchAsync(queryString, cb) {\r\n                var billStyles = this.billStyles;\r\n                var results = queryString ? billStyles.filter(this.billStylesStateFilter(queryString)) : billStyles;\r\n                clearTimeout(this.timeout);\r\n                this.timeout = setTimeout(() => {\r\n                    cb(results);\r\n                }, 3000 * Math.random());\r\n            },\r\n            updateUserIdQuerySearchAsync(queryString, cb) {\r\n                var updateUserIds = this.updateUserIds;\r\n                var results = queryString ? updateUserIds.filter(this.updateUserIdsStateFilter(queryString)) : updateUserIds;\r\n                clearTimeout(this.timeout);\r\n                this.timeout = setTimeout(() => {\r\n                    cb(results);\r\n                }, 3000 * Math.random());\r\n            },\r\n            //検索条件を作成する\r\n            customersStateFilter(queryString) {\r\n                return (state) => {\r\n                    return (state.customer.toLowerCase().indexOf(queryString.toLowerCase()) === 0);\r\n                };\r\n            },\r\n            billStylesStateFilter(queryString) {\r\n                return (state) => {\r\n                    return (state.billStyle.toLowerCase().indexOf(queryString.toLowerCase()) === 0);\r\n                };\r\n            },\r\n            updateUserIdsStateFilter(queryString) {\r\n                return (state) => {\r\n                    return (state.updateUsername.toLowerCase().indexOf(queryString.toLowerCase()) === 0);\r\n                };\r\n            },\r\n            //入力データをバンティングする\r\n            handleSelect(item) {\r\n                console.log(item);\r\n                if (item.customer != null) {\r\n                    this.condition.customer = item.customer;\r\n                } else if (item.billType != null) {\r\n                    this.condition.billType = item.billType;\r\n                } else if (item.updateuserid != null) {\r\n                    this.condition.updateuserid = item.updateuserid;\r\n                }\r\n            },\r\n        },\r\n        //画面がロードされたら、取引先などのデータを取得する\r\n        mounted() {\r\n            this.customers = this.loadCustomers();\r\n            this.billStyles = this.loadBillStyles();\r\n            this.updateUserIds = this.loadUpdateUserIds();\r\n            var rolesno = sessionStorage.getItem(\"rolesno\");\r\n            switch (rolesno) {\r\n                case '1':\r\n                    this.reviewBt = false;\r\n                    this.newBt = true;\r\n                    this.downloadBt = false;\r\n                    break;\r\n                case '2':\r\n                    this.reviewBt = false;\r\n                    this.newBt = false;\r\n                    this.downloadBt = true;\r\n                    break;\r\n                case '3':\r\n                    this.reviewBt = true;\r\n                    this.newBt = false;\r\n                    this.downloadBt = true;\r\n                    break;\r\n                case \"4\":\r\n                    this.reviewBt = true;\r\n                    this.newBt = true;\r\n                    this.downloadBt = true;\r\n                    break;\r\n            }\r\n        },\r\n    }\r\n</script>\r\n\r\n<style scoped>\r\n    .el-table :deep() .cell {\r\n        /* overflow: hidden; */\r\n        /* text-overflow: ellipsis; */\r\n        white-space: nowrap;\r\n\r\n    }\r\n\r\n    .block {\r\n        position: absolute;\r\n        bottom: 40px;\r\n        left: 47%;\r\n    }\r\n\r\n    .avatar-uploader .el-upload {\r\n        border: 1px dashed #d9d9d9;\r\n        border-radius: 6px;\r\n        cursor: pointer;\r\n        position: relative;\r\n        overflow: hidden;\r\n    }\r\n\r\n    .avatar-uploader .el-upload:hover {\r\n        border-color: #409EFF;\r\n    }\r\n\r\n    .avatar-uploader-icon {\r\n        font-size: 28px;\r\n        color: #8c939d;\r\n        width: 178px;\r\n        height: 178px;\r\n        line-height: 178px;\r\n        text-align: center;\r\n    }\r\n\r\n    .avatar {\r\n        width: 178px;\r\n        height: 178px;\r\n        display: block;\r\n    }\r\n</style>"],"mappings":";AAgIA;EACAA,IAAA;EACAC,KAAA;IACA;MACAC,UAAA;MACAC,iBAAA;MACA;MACAC,QAAA;MACAC,KAAA;MACAC,UAAA;MACAC,SAAA;MACAC,UAAA;MACAC,aAAA;MACAC,kBAAA;MACAC,eAAA;MACAC,cAAA;MACAC,OAAA;MACAC,IAAA;MAEA;MACAC,IAAA;QACAC,QAAA;QACAC,QAAA;QACAC,MAAA;QACAC,cAAA;QACAC,cAAA;QACAC,YAAA;QACAC,SAAA;QACAC,QAAA;QACAC,IAAA;MACA;MAEA;MACAC,aAAA,GACA;QACAC,MAAA;QACAN,cAAA;QACAD,cAAA;QACAF,QAAA;QACAD,QAAA;MACA,GACA;QACAU,MAAA;QACAN,cAAA;QACAD,cAAA;QACAF,QAAA;QACAD,QAAA;MACA,GACA;QACAU,MAAA;QACAN,cAAA;QACAD,cAAA;QACAF,QAAA;QACAD,QAAA;MACA,EACA;MACAW,SAAA;QACAb,IAAA;QACAc,kBAAA;QACAC,gBAAA;QACAZ,QAAA;QACAD,QAAA;QACAc,YAAA;MACA;IAEA;EACA;EAEAC,OAAA;IACA;IACAC,UAAA;MACA,KAAAjB,IAAA;QACAC,QAAA;QACAC,QAAA;QACAC,MAAA;QACAC,cAAA;QACAC,cAAA;QACAC,YAAA;QACAC,SAAA;QACAC,QAAA;QACAC,IAAA;MACA;IACA;IAEA;IACAS,SAAA;MACA;MACA;MACA;MACA;MACA;IAAA,CACA;IACA;IACAC,sBAAAC,GAAA;MACA,KAAAhC,iBAAA,GAAAgC,GAAA;IACA;IACA;IACAC,OAAA;MACA;MACA;MACA;MACA;MACA;IAAA,CACA;IACA;IACAC,MAAA;MACA,KAAAV,SAAA;QACAb,IAAA;QACAwB,QAAA;QACAC,QAAA;QACAtB,QAAA;QACAD,QAAA;QACAK,YAAA;MACA;IACA;IACA;IACAmB,SAAA;MACA;MACA;MACA;MACA;MACA;IAAA,CACA;IACA;IACAC,OAAA;MACA,KAAAC,OAAA,CAAAC,IAAA;QAAAC,IAAA;MAAA;IACA;IACA;IACAC,SAAA;MACA,KAAAC,QAAA;QACAC,OAAA;QACA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"},"metadata":{},"sourceType":"module","externalDependencies":[]}