{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport \"core-js/modules/web.url-search-params.delete.js\";\nimport \"core-js/modules/web.url-search-params.has.js\";\nimport \"core-js/modules/web.url-search-params.size.js\";\n// Flatpickrを導入する\nimport flatpickr from 'flatpickr';\nimport 'flatpickr/dist/flatpickr.css';\nimport 'flatpickr/dist/l10n/ja';\nexport default {\n  name: 'billView',\n  data() {\n    return {\n      drawerflag: false,\n      multipleSelection: [],\n      //ロジック処理\n      conditionFlag: false,\n      sortFlag: false,\n      onSubmitFlag: false,\n      // ⬇️\n      onWaitFlag: false,\n      // \n\n      //ボタンの有効化\n      editBt: true,\n      agreeBt: true,\n      disagreeBt: true,\n      reviewBt: false,\n      downloadBt: false,\n      editPermissonsBt: false,\n      //順番処理\n      sort: false,\n      order: '',\n      //ページング部分の機能\n      totalBill: '',\n      currentPage: 1,\n      pagesize: 10,\n      //条件付き検索部分の機能\n      customers: [],\n      billTypes: [],\n      updateUsers: [],\n      timeout: null,\n      date: '',\n      //帳票詳細\n      bill: {\n        billno: '',\n        billType: '',\n        customer: '',\n        remark: '',\n        transactionAmount: '',\n        transactionymd: '',\n        updateUserName: '',\n        updateymd: '',\n        reviewStatus: '',\n        editPermissions: false,\n        imageUrl: '',\n        Logs: []\n      },\n      //帳票一覧\n      billTableData: [],\n      //検索条件\n      // 对应的选框\n      condition: {\n        transactionDateFrom: '',\n        transactionDateTo: '',\n        transactionAmountFrom: '',\n        transactionAmountTo: '',\n        customerno: '',\n        billTypeno: '',\n        updateuserid: ''\n      }\n    };\n  },\n  computed: {\n    exportBt() {\n      if (this.multipleSelection.length == 0) {\n        return true;\n      } else {\n        return false;\n      }\n    }\n  },\n  //内部条件发生变化时 进行一次判断 这段是导出按钮亮不亮的逻辑\n\n  methods: {\n    handleSizeChange(size) {\n      this.pagesize = size;\n      this.getBillsByFlag();\n    },\n    //順番処理\n    sortChange(column) {\n      this.sort = column.order;\n      this.order = column.prop;\n      this.sortFlag = true;\n      this.currentPage = 1;\n      if (this.conditionFlag == true) {\n        this.$http.post('/bill/conditionSearch', {\n          currentPage: this.currentPage,\n          pagesize: this.pagesize,\n          condition: this.condition,\n          sort: this.sort,\n          order: this.order\n        }).then(res => {\n          if (res.data.code == 200) {\n            this.billTableData = res.data.data;\n            this.totalBill = res.data.data[0].totalBill;\n          }\n        });\n      } else if (this.onSubmitFlag == true) {\n        this.$http.post('/bill/getOnSubmit', {\n          currentPage: this.currentPage,\n          pagesize: this.pagesize,\n          sort: this.sort,\n          order: this.order\n        }).then(res => {\n          if (res.data.code == 200) {\n            this.billTableData = res.data.data;\n            this.totalBill = res.data.data[0].totalBill;\n          }\n        });\n      } else {\n        this.$http.post('/bill/getBills', {\n          currentPage: this.currentPage,\n          pagesize: this.pagesize,\n          order: this.sort,\n          prop: this.order\n        }).then(res => {\n          if (res.data.code == 200) {\n            this.billTableData = res.data.data;\n          }\n        });\n      }\n    },\n    //金額のチェック\n    checkAmountFrom() {\n      if (!/^-?\\d+$/.test(this.condition.transactionAmountFrom) && this.condition.transactionAmountFrom != '') {\n        this.$message({\n          type: 'error',\n          message: '整数のみ入力'\n        });\n        this.condition.transactionAmountFrom = '';\n      }\n    },\n    checkAmountTo() {\n      if (!/^-?\\d+$/.test(this.condition.transactionAmountTo) && this.condition.transactionAmountTo != '') {\n        this.$message({\n          type: 'error',\n          message: '整数のみ入力'\n        });\n        this.condition.transactionAmountTo = '';\n      }\n    },\n    //編集権限を付くボタン\n    giveEditPermissons() {\n      this.$http.get('/bill/giveEditPermissons/' + this.bill.billno).then(res => {\n        if (res.data.code == 200) {\n          this.$message({\n            type: 'success',\n            message: '編集権限を付く完了'\n          });\n        }\n      });\n    },\n    //編集ボタン\n    edit() {\n      this.$router.push({\n        path: '/edit/' + this.bill.billno\n      });\n    },\n    //承認ボタン\n    agree() {\n      this.$http.get('/bill/agreeBill').then(res => {\n        if (res.data.code == 200) {\n          this.$message({\n            type: 'success',\n            message: '承認完了'\n          });\n          this.drawerflag = false;\n        }\n      });\n    },\n    //拒否ボタン\n    disagree() {\n      this.$http.get('/bill/disagreeBill').then(res => {\n        if (res.data.code == 200) {\n          this.$message({\n            type: 'success',\n            message: '拒否完了'\n          });\n          this.drawerflag = false;\n        }\n      });\n    },\n    //ページジャンプ\n    pageCurrentChange(val) {\n      this.currentPage = val;\n      this.getBillsByFlag();\n    },\n    //条件付き検索・承認待ち・ソート機能を別で帳票データを取得する\n    //A&&B（&&C） 或 A&&C 会影响请求（返回sql不同）\n    getBillsByFlag() {\n      if (this.sortFlag == false) {\n        if (this.conditionFlag == true) {\n          this.$http.post('/bill/conditionSearch', {\n            currentPage: this.currentPage,\n            pagesize: this.pagesize,\n            condition: this.condition\n          }).then(res => {\n            if (res.data.code == 200) {\n              this.billTableData = res.data.data;\n              this.totalBill = res.data.data[0].totalBill;\n            }\n          });\n        } else if (this.onSubmitFlag == true) {\n          this.$http.post('/bill/getOnSubmit', {\n            currentPage: this.currentPage,\n            pagesize: this.pagesize\n          }).then(res => {\n            if (res.data.code == 200) {\n              this.billTableData = res.data.data;\n              this.totalBill = res.data.data[0].totalBill;\n            }\n          });\n        } else {\n          this.getBills();\n        }\n      } else {\n        if (this.conditionFlag == true) {\n          this.$http.post('/bill/conditionSearch', {\n            currentPage: this.currentPage,\n            pagesize: this.pagesize,\n            condition: this.condition,\n            sort: this.sort,\n            order: this.order\n          }).then(res => {\n            if (res.data.code == 200) {\n              this.billTableData = res.data.data;\n              this.totalBill = res.data.data[0].totalBill;\n            }\n          }); //then是返回的东西是res 括号里面对res的操作\n        } else if (this.onSubmitFlag == true) {\n          this.$http.post('/bill/getOnSubmit', {\n            currentPage: this.currentPage,\n            pagesize: this.pagesize,\n            sort: this.sort,\n            order: this.order\n          }).then(res => {\n            if (res.data.code == 200) {\n              this.billTableData = res.data.data;\n              this.totalBill = res.data.data[0].totalBill;\n            }\n          });\n        } else {\n          this.$http.post('/bill/getBills', {\n            currentPage: this.currentPage,\n            pagesize: this.pagesize,\n            sort: this.sort,\n            order: this.order\n          }).then(res => {\n            if (res.data.code == 200) {\n              this.billTableData = res.data.data;\n              this.totalBill = res.data.data[0].totalBill;\n            }\n          });\n        }\n      }\n    },\n    //帳票詳細をクリアする\n    clearBill() {\n      this.bill = {\n        billType: '',\n        customer: '',\n        remark: '',\n        transactionAmount: '',\n        transactionymd: '',\n        updateUserName: '',\n        updateymd: '',\n        imageUrl: '',\n        Logs: []\n      };\n    },\n    //帳票データを取得する\n    getBills() {\n      this.$http.post('/bill/getBills', {\n        currentPage: this.currentPage,\n        pagesize: this.pagesize\n      }).then(res => {\n        if (res.data.code == 200) {\n          this.billTableData = res.data.data;\n          this.totalBill = res.data.data[0].totalBill;\n        }\n      });\n    },\n    //チェックボックスを選択する\n    handleSelectionChange(val) {\n      this.multipleSelection = [];\n      val.forEach(element => {\n        this.multipleSelection.push(element.billno);\n      });\n    },\n    //検索ボタン\n    search() {\n      // ⬇️校验逻辑\n      const dateFrom = new Date(this.condition.transactionDateFrom);\n      const dateTo = new Date(this.condition.transactionDateTo);\n      if (dateFrom > dateTo) {\n        this.$message({\n          type: 'error',\n          message: '開始日は終了日より小さい'\n        });\n        return;\n      }\n      let AmountFrom = Number(this.condition.transactionAmountFrom);\n      let AmountTo = Number(this.condition.transactionAmountTo);\n      if (this.condition.transactionAmountFrom != '' && this.condition.transactionAmountTo != '') {\n        if (AmountFrom > AmountTo) {\n          this.$message({\n            type: 'error',\n            message: '金額範囲は0より小さい'\n          });\n          return;\n        }\n      }\n      // 上面是数据校验\n\n      // 下面是数据处理逻辑\n\n      // **记得加flag处理\n      this.conditionFlag = true;\n      this.onSubmitFlag = false;\n      // \n      this.onWaitFlag = false;\n      // \n      this.currentPage = 1; //重置\n      this.$http.post('/bill/conditionSearch', {\n        currentPage: this.currentPage,\n        pagesize: this.pagesize,\n        condition: this.condition\n      }).then(res => {\n        if (res.data.code == 200) {\n          this.billTableData = res.data.data;\n          this.totalBill = res.data.data[0].totalBill;\n          // totalBill 计算页数 \n        }\n      });\n    },\n\n    //クリアボタン  \n    clear() {\n      this.condition.transactionDateFrom = '';\n      this.condition.transactionDateTo = '';\n      this.condition.transactionAmountFrom = '';\n      this.condition.transactionAmountTo = '';\n      this.condition.customerno = '';\n      this.condition.billTypeno = '';\n      this.condition.updateuserid = '';\n      this.onSubmitFlag = false;\n      this.conditionFlag = false;\n      // \n      this.onWaitFlag = false;\n      // \n      this.currentPage = 1;\n      this.sortFlag = false;\n      this.sort = null;\n      this.order = null;\n      this.getBills();\n    },\n    //承認待ちボタン\n    onSubmit() {\n      this.onSubmitFlag = true;\n      this.conditionFlag = false;\n      // \n      this.onWaitFlag = false;\n      // \n      this.currentPage = 1;\n      this.$http.post('/bill/getOnSubmit', {\n        currentPage: this.currentPage,\n        pagesize: this.pagesize\n      }).then(res => {\n        if (res.data.code == 200) {\n          this.billTableData = res.data.data;\n          this.totalBill = res.data.data[0].totalBill;\n        }\n      });\n    },\n    // \n    // 所有的flag同时加入判断 按钮\n    // \n    onWait() {\n      this.onSubmitFlag = false;\n      this.conditionFlag = false;\n      // \n      this.onWaitFlag = true;\n      // \n      this.currentPage = 1;\n      this.$http.post('/bill/getOnWait', {\n        currentPage: this.currentPage,\n        pagesize: this.pagesize\n      }).then(res => {\n        if (res.data.code == 200) {\n          this.billTableData = res.data.data;\n          this.totalBill = res.data.data[0].totalBill;\n        }\n      });\n    },\n    // \n    //ダウンロードボタン\n    download() {\n      this.$http.post('/bill/downloadBill', this.multipleSelection, {\n        responseType: 'blob'\n      }).then(res => {\n        const blob = new Blob([res.data]);\n        const url = window.URL.createObjectURL(blob);\n\n        // 创建一个 <a> 标签用于下载\n        const link = document.createElement('a');\n        link.href = url;\n        link.download = 'downloaded_file.txt'; // 设置下载文件的名称\n        link.click();\n\n        // 释放资源\n        window.URL.revokeObjectURL(url);\n      });\n    },\n    //当帳票の詳細を表示する\n    handleRowClick(row) {\n      this.$http.get('/bill/getBillDetails/' + row.billno).then(res => {\n        if (res.data.code == 200) {\n          for (let i = 0; i < res.data.data.length; i++) {\n            if (i == 0) {\n              this.bill = res.data.data[i];\n            } else {\n              this.bill.Logs[i] = res.data.data[i];\n            }\n          }\n        }\n      });\n      //編集権限を判断する\n      if (this.bill.reviewStatus == 1) {\n        this.agreeBt = true;\n        this.disagreeBt = true;\n      }\n      if (!this.bill.editPermissions) {\n        if (sessionStorage.getItem(\"rolesno\") == 4 || sessionStorage.getItem(\"rolesno\") == 3) {\n          this.editPermissonsBt = true;\n        }\n        this.editBt = true;\n      } else {\n        this.editPermissonsBt = false;\n      }\n      this.drawerflag = true;\n    },\n    //アップロードしたファイルを表示する\n    handleAvatarSuccess(response) {\n      console.log(response);\n      this.bill.imageUrl = response;\n    },\n    //サーバーからデータを取得する\n    loadCustomers() {\n      this.$http.get('/category/getCustomers').then(res => {\n        if (res.data.code == 200) {\n          this.customers = res.data.data;\n        }\n      });\n    },\n    loadBillTypes() {\n      this.$http.get('/category/getBillTypes').then(res => {\n        if (res.data.code == 200) {\n          this.billTypes = res.data.data;\n        }\n      });\n    },\n    loadUpdateUsers() {\n      this.$http.get('/bill/getUpdateUserids').then(res => {\n        if (res.data.code == 200) {\n          this.updateUsers = res.data.data;\n        }\n      });\n    }\n  },\n  //画面がロードされたら、取引先などのデータを取得する\n  mounted() {\n    this.loadCustomers();\n    this.loadBillTypes();\n    this.loadUpdateUsers();\n    this.getBills();\n    var rolesno = sessionStorage.getItem(\"rolesno\");\n    switch (rolesno) {\n      // \n      case '1':\n        this.reviewBt = false;\n        this.downloadBt = false;\n        this.editBt = false;\n        break;\n      case '2':\n        this.reviewBt = false;\n        this.downloadBt = true;\n        break;\n      case '3':\n        this.reviewBt = true;\n        this.downloadBt = true;\n        this.agreeBt = false;\n        this.disagreeBt = false;\n        break;\n      case \"4\":\n        this.editFlag = true;\n        this.reviewBt = true;\n        this.downloadBt = true;\n        this.editBt = false;\n        this.agreeBt = false;\n        this.disagreeBt = false;\n        this.editPermissonsBt = true;\n        break;\n    }\n\n    //日付の設定\n    // \n    flatpickr(this.$refs.datepickerInput1, {\n      dateFormat: 'Y/m/d',\n      locale: 'ja',\n      firstDayOfWeek: '0',\n      allowInput: 'true',\n      minDate: \"1990/01/01\",\n      maxDate: \"today\"\n    });\n    flatpickr(this.$refs.datepickerInput2, {\n      dateFormat: 'Y/m/d',\n      locale: 'ja',\n      firstDayOfWeek: '0',\n      allowInput: 'true',\n      minDate: \"1990/01/01\",\n      maxDate: \"today\"\n    });\n  }\n};","map":{"version":3,"names":["flatpickr","name","data","drawerflag","multipleSelection","conditionFlag","sortFlag","onSubmitFlag","onWaitFlag","editBt","agreeBt","disagreeBt","reviewBt","downloadBt","editPermissonsBt","sort","order","totalBill","currentPage","pagesize","customers","billTypes","updateUsers","timeout","date","bill","billno","billType","customer","remark","transactionAmount","transactionymd","updateUserName","updateymd","reviewStatus","editPermissions","imageUrl","Logs","billTableData","condition","transactionDateFrom","transactionDateTo","transactionAmountFrom","transactionAmountTo","customerno","billTypeno","updateuserid","computed","exportBt","length","methods","handleSizeChange","size","getBillsByFlag","sortChange","column","prop","$http","post","then","res","code","checkAmountFrom","test","$message","type","message","checkAmountTo","giveEditPermissons","get","edit","$router","push","path","agree","disagree","pageCurrentChange","val","getBills","clearBill","handleSelectionChange","forEach","element","search","dateFrom","Date","dateTo","AmountFrom","Number","AmountTo","clear","onSubmit","onWait","download","responseType","blob","Blob","url","window","URL","createObjectURL","link","document","createElement","href","click","revokeObjectURL","handleRowClick","row","i","sessionStorage","getItem","handleAvatarSuccess","response","console","log","loadCustomers","loadBillTypes","loadUpdateUsers","mounted","rolesno","editFlag","$refs","datepickerInput1","dateFormat","locale","firstDayOfWeek","allowInput","minDate","maxDate","datepickerInput2"],"sources":["src/views/search.vue"],"sourcesContent":["<template>\r\n    <div>\r\n        <div class=\"h4\" style=\"font-weight: 700;text-align:left\">電子取引管理</div>\r\n        <el-divider></el-divider>\r\n        <!-- 条件付き検索 -->\r\n        <el-row :gutter=\"20\">\r\n            <el-col :span=\"16\">\r\n                <el-form :inline=\"true\" :model=\"condition\" class=\"demo-form-inline \">\r\n                    <el-form-item label=\"取引年月日\">\r\n                        <input type=\"text\" ref=\"datepickerInput1\" v-model=\"condition.transactionDateFrom\"\r\n                            class=\"el-input__inner\" placeholder=\"開始日\" style=\"width: 120px;\">\r\n                    </el-form-item>\r\n                    <el-form-item label=\"\">~</el-form-item>\r\n                    <el-form-item label=\"\">\r\n                        <input type=\"text\" ref=\"datepickerInput2\" v-model=\"condition.transactionDateTo\"\r\n                            class=\"el-input__inner\" placeholder=\"終了日\" style=\"width: 120px;\">\r\n                    </el-form-item>\r\n                    <el-form-item label=\"取引金額範囲\">\r\n                        <el-input v-model=\"condition.transactionAmountFrom\" placeholder=\"￥\" @blur=\"checkAmountFrom\"\r\n                            style=\"width: 100px;\"></el-input>\r\n                    </el-form-item>\r\n                    <el-form-item label=\"\">~</el-form-item>\r\n                    <el-form-item label=\"\">\r\n                        <el-input v-model=\"condition.transactionAmountTo\" placeholder=\"￥\" @blur=\"checkAmountTo\"\r\n                            style=\"width: 100px;\"></el-input>\r\n                    </el-form-item>\r\n                    <br>\r\n                    <el-form-item label=\"取引先\">\r\n                        <el-select v-model=\"condition.customerno\" filterable placeholder=\"入力又は選択\">\r\n                            <el-option v-for=\"customer in customers\" :key=\"customer.customerno\"\r\n                                :label=\"customer.customer\" :value=\"customer.customerno\">\r\n                            </el-option>\r\n                        </el-select>\r\n                    </el-form-item>\r\n\r\n                    <el-form-item label=\"帳票種類\">\r\n                        <el-select v-model=\"condition.billTypeno\" filterable placeholder=\"入力又は選択\">\r\n                            <el-option v-for=\"billType in billTypes\" :key=\"billType.billTypeno\"\r\n                                :label=\"billType.billType\" :value=\"billType.billTypeno\">\r\n                            </el-option>\r\n                        </el-select>\r\n                    </el-form-item>&nbsp;\r\n                    <el-form-item label=\"登録ユーザー\">\r\n                        <el-select v-model=\"condition.updateuserid\" filterable placeholder=\"入力又は選択\">\r\n                            <el-option v-for=\"updateUser in updateUsers\" :key=\"updateUser.updateuserid\"\r\n                                :label=\"updateUser.updateUserName\" :value=\"updateUser.updateuserid\">\r\n                            </el-option>\r\n                        </el-select>\r\n                    </el-form-item>\r\n                </el-form>\r\n            </el-col>\r\n            <el-col :span=\"8\">\r\n                <el-button type=\"primary\" @click=\"search\">検 索</el-button>\r\n                <el-button type=\"warning\" @click=\"clear\">クリア</el-button>\r\n                <br>\r\n                <el-button type=\"primary\" @click=\"onWait\" v-if=\"reviewBt\">待修改</el-button>\r\n                <el-button type=\"primary\" @click=\"onSubmit\" v-if=\"reviewBt\">承認待ち</el-button>\r\n        \r\n                <!-- v-if ：显示不显示这个按钮  -->\r\n                <el-button type=\"primary\" @click=\"download\" v-if=\"downloadBt\" :disabled=\"exportBt\">エクスポート</el-button>\r\n            </el-col>\r\n        </el-row>\r\n\r\n        <!-- 帳票テーブル -->\r\n        <el-table :data=\"billTableData\" style=\"width: 100%\" @selection-change=\"handleSelectionChange\"\r\n            @row-click=\"handleRowClick\" @sort-change=\"sortChange\">\r\n            <el-table-column type=\"selection\"></el-table-column>\r\n            <el-table-column prop=\"billno\" label=\"帳票番号\" sortable=\"sortable\">\r\n            </el-table-column>\r\n            <el-table-column prop=\"transactionymd\" label=\"取引年月日\" sortable=\"sortable\">\r\n            </el-table-column>\r\n            <el-table-column prop=\"transactionAmount\" label=\"取引金額\" sortable=\"sortable\">\r\n            </el-table-column>\r\n            <el-table-column prop=\"customer\" label=\"取引先\">\r\n            </el-table-column>\r\n            <el-table-column prop=\"billType\" label=\"帳票種類\">\r\n            </el-table-column>\r\n        </el-table>\r\n\r\n        <!-- 帳票詳細drawer -->\r\n\r\n        <el-drawer title=\"履歴\" :visible.sync=\"drawerflag\" size=\"80%\" @closed=\"clearBill\">\r\n            <div style=\"margin: 30px 100px; \" class=\"d-flex\">\r\n                <div style=\"width: 44%;\">\r\n                    <el-form ref=\"form\" :model=\"bill\" label-width=\"120px\" :disabled=\"true\">\r\n                        <el-form-item label=\"帳票No\">\r\n                            <span style=\"font-size: 16px;\">{{bill.billno}}</span>\r\n                        </el-form-item>\r\n\r\n                        <el-form-item label=\"取引年月日\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\r\n                            <el-input v-model=\"bill.transactionymd\" style=\"width: 85%;\"></el-input>\r\n                        </el-form-item>\r\n                        <el-form-item label=\"取引金額\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\r\n                            <el-input v-model=\"bill.transactionAmount\" style=\"width: 85%;\"></el-input>\r\n                        </el-form-item>\r\n                        <el-form-item label=\"取引先\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\r\n                            <el-input v-model=\"bill.customer\" style=\"width: 85%;\"></el-input>\r\n                        </el-form-item>\r\n                        <el-form-item label=\"帳票種類\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\r\n                            <el-input v-model=\"bill.billType\" style=\"width: 85%;\"></el-input>\r\n                        </el-form-item>\r\n                        <el-form-item label=\"訂正備考\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\r\n                            <el-input type=\"textarea\" :rows=\"3\" v-model=\"bill.remark\" style=\"width: 85%;\"></el-input>\r\n                        </el-form-item>\r\n                        <el-form-item label=\"登録日時\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\r\n                            <el-input v-model=\"bill.updateymd\" style=\"width: 85%;\"></el-input>\r\n                        </el-form-item>\r\n                        <el-form-item label=\"登録ユーザー\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\r\n                            <el-input v-model=\"bill.updateUserName\" style=\"width: 85%;\"></el-input>\r\n                        </el-form-item>\r\n                    </el-form>\r\n                    <el-button size=\"medium\" type=\"primary\" @click=\"edit\" :disabled=\"editBt\">訂正</el-button>\r\n                    <el-button size=\"medium\" type=\"primary\" @click=\"agree\" :disabled=\"agreeBt\">承認</el-button>\r\n                    <el-button size=\"medium\" type=\"info\" @click=\"disagree\"\r\n                        :disabled=\"disagreeBt\">拒否</el-button>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\r\n                    <el-button size=\"medium\" type=\"warning\" @click=\"giveEditPermissons\"\r\n                        v-if=\"editPermissonsBt\">訂正権限を付く</el-button>\r\n                </div>\r\n                <embed :src=\"bill.imageUrl\" type=\"application/pdf\" width=\"50%\" height=\"70%\"\r\n                    style=\"position: absolute; top: 5%; right: 2%;\">\r\n                <!-- <el-upload class=\"avatar-uploader\" action=\"http://127.0.0.1:8081\" :show-file-list=\"false\"\r\n                    :on-error=\"handleAvatarSuccess\"> -->\r\n                <!-- <i v-else class=\"el-icon-plus avatar-uploader-icon\"></i> -->\r\n                <!-- </el-upload> -->\r\n            </div>\r\n            <el-table :data=\"bill.Logs\" :border=\"true\" style=\"width: 80%;margin-top: 4%;margin-left: 3%;\">\r\n                <el-table-column prop=\"date\" label=\"取引年月日\">\r\n                </el-table-column>\r\n                <el-table-column prop=\"money\" label=\"取引金額\">\r\n                </el-table-column>\r\n                <el-table-column prop=\"custom\" label=\"取引先\">\r\n                </el-table-column>\r\n                <el-table-column prop=\"paper\" label=\"帳票種類\">\r\n                </el-table-column>\r\n                <el-table-column prop=\"log\" label=\"訂正備考\">\r\n                </el-table-column>\r\n                <el-table-column prop=\"date2\" label=\"登録日時\">\r\n                </el-table-column>\r\n                <el-table-column prop=\"user\" label=\"登録ユーザー\">\r\n                </el-table-column>\r\n            </el-table>\r\n        </el-drawer>\r\n        <div class=\"block\">\r\n            <el-pagination @current-change=\"pageCurrentChange\" :current-page.sync=\"currentPage\" :page-size=\"pagesize\"\r\n                :page-sizes=\"[10, 50, 100, 500]\" @size-change=\"handleSizeChange\"\r\n                layout=\"total,sizes, prev, pager, next, jumper\" :total=\"totalBill\">\r\n            </el-pagination>\r\n        </div>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\n    // Flatpickrを導入する\r\n    import flatpickr from 'flatpickr';\r\n    import 'flatpickr/dist/flatpickr.css';\r\n    import 'flatpickr/dist/l10n/ja';\r\n    export default {\r\n        name: 'billView',\r\n        data() {\r\n            return {\r\n                drawerflag: false,\r\n                multipleSelection: [],\r\n\r\n                //ロジック処理\r\n                conditionFlag: false,\r\n                sortFlag: false,\r\n                onSubmitFlag: false,\r\n                // ⬇️\r\n                onWaitFlag: false,\r\n                // \r\n\r\n\r\n                //ボタンの有効化\r\n                editBt: true,\r\n                agreeBt: true,\r\n                disagreeBt: true,\r\n                reviewBt: false,\r\n                downloadBt: false,\r\n                editPermissonsBt: false,\r\n\r\n                //順番処理\r\n                sort: false,\r\n                order: '',\r\n\r\n                //ページング部分の機能\r\n                totalBill: '',\r\n                currentPage: 1,\r\n                pagesize: 10,\r\n\r\n                //条件付き検索部分の機能\r\n                customers: [],\r\n                billTypes: [],\r\n                updateUsers: [],\r\n                timeout: null,\r\n                date: '',\r\n\r\n                //帳票詳細\r\n                bill: {\r\n                    billno: '',\r\n                    billType: '',\r\n                    customer: '',\r\n                    remark: '',\r\n                    transactionAmount: '',\r\n                    transactionymd: '',\r\n                    updateUserName: '',\r\n                    updateymd: '',\r\n                    reviewStatus: '',\r\n                    editPermissions: false,\r\n                    imageUrl: '',\r\n                    Logs: [],\r\n                },\r\n\r\n                //帳票一覧\r\n                billTableData: [],\r\n\r\n                //検索条件\r\n                // 对应的选框\r\n                condition: {\r\n                    transactionDateFrom: '',\r\n                    transactionDateTo: '',\r\n                    transactionAmountFrom: '',\r\n                    transactionAmountTo: '',\r\n                    customerno: '',\r\n                    billTypeno: '',\r\n                    updateuserid: '',\r\n                },\r\n\r\n            }\r\n        },\r\n        computed: {\r\n            exportBt() {\r\n                if (this.multipleSelection.length == 0) {\r\n                    return true;\r\n                } else {\r\n                    return false;\r\n                }\r\n            }\r\n        },\r\n        //内部条件发生变化时 进行一次判断 这段是导出按钮亮不亮的逻辑\r\n\r\n        methods: {\r\n            handleSizeChange(size) {\r\n                this.pagesize = size;\r\n                this.getBillsByFlag();\r\n            },\r\n            //順番処理\r\n            sortChange(column) {\r\n                this.sort = column.order;\r\n                this.order = column.prop;\r\n                this.sortFlag = true;\r\n                this.currentPage = 1;\r\n                if (this.conditionFlag == true) {\r\n                    this.$http.post('/bill/conditionSearch', {\r\n                        currentPage: this.currentPage,\r\n                        pagesize: this.pagesize,\r\n                        condition: this.condition,\r\n                        sort: this.sort,\r\n                        order: this.order\r\n                    }).then(res => {\r\n                        if (res.data.code == 200) {\r\n                            this.billTableData = res.data.data;\r\n                            this.totalBill = res.data.data[0].totalBill;\r\n                        }\r\n                    });\r\n                } else if (this.onSubmitFlag == true) {\r\n                    this.$http.post('/bill/getOnSubmit', {\r\n                        currentPage: this.currentPage,\r\n                        pagesize: this.pagesize,\r\n                        sort: this.sort,\r\n                        order: this.order\r\n                    }).then(res => {\r\n                        if (res.data.code == 200) {\r\n                            this.billTableData = res.data.data\r\n                            this.totalBill = res.data.data[0].totalBill;\r\n                        }\r\n                    });\r\n                } else {\r\n                    this.$http.post('/bill/getBills', {\r\n                        currentPage: this.currentPage,\r\n                        pagesize: this.pagesize,\r\n                        order: this.sort,\r\n                        prop: this.order\r\n                    }).then(res => {\r\n                        if (res.data.code == 200) {\r\n                            this.billTableData = res.data.data;\r\n                        }\r\n                    });\r\n                }\r\n            },\r\n\r\n            //金額のチェック\r\n            checkAmountFrom() {\r\n                if (!/^-?\\d+$/.test(this.condition.transactionAmountFrom) && this.condition.transactionAmountFrom != '') {\r\n                    this.$message({\r\n                        type: 'error',\r\n                        message: '整数のみ入力'\r\n                    });\r\n                    this.condition.transactionAmountFrom = '';\r\n                }\r\n            },\r\n            checkAmountTo() {\r\n                if (!/^-?\\d+$/.test(this.condition.transactionAmountTo) && this.condition.transactionAmountTo != '') {\r\n                    this.$message({\r\n                        type: 'error',\r\n                        message: '整数のみ入力'\r\n                    });\r\n                    this.condition.transactionAmountTo = '';\r\n                }\r\n            },\r\n\r\n            //編集権限を付くボタン\r\n            giveEditPermissons() {\r\n                this.$http.get('/bill/giveEditPermissons/' + this.bill.billno).then(res => {\r\n                    if (res.data.code == 200) {\r\n                        this.$message({\r\n                            type: 'success',\r\n                            message: '編集権限を付く完了'\r\n                        });\r\n                    }\r\n                });\r\n            },\r\n\r\n            //編集ボタン\r\n            edit() {\r\n                this.$router.push({ path: '/edit/' + this.bill.billno });\r\n            },\r\n            //承認ボタン\r\n            agree() {\r\n                this.$http.get('/bill/agreeBill').then(res => {\r\n                    if (res.data.code == 200) {\r\n                        this.$message({\r\n                            type: 'success',\r\n                            message: '承認完了'\r\n                        });\r\n                        this.drawerflag = false;\r\n                    }\r\n                });\r\n            },\r\n            //拒否ボタン\r\n            disagree() {\r\n                this.$http.get('/bill/disagreeBill').then(res => {\r\n                    if (res.data.code == 200) {\r\n                        this.$message({\r\n                            type: 'success',\r\n                            message: '拒否完了'\r\n                        });\r\n                        this.drawerflag = false;\r\n                    }\r\n                });\r\n            },\r\n\r\n            //ページジャンプ\r\n            pageCurrentChange(val) {\r\n                this.currentPage = val;\r\n                this.getBillsByFlag();\r\n            },\r\n            //条件付き検索・承認待ち・ソート機能を別で帳票データを取得する\r\n            //A&&B（&&C） 或 A&&C 会影响请求（返回sql不同）\r\n            getBillsByFlag() {\r\n                if (this.sortFlag == false) {\r\n                    if (this.conditionFlag == true) {\r\n                        this.$http.post('/bill/conditionSearch', {\r\n                            currentPage: this.currentPage,\r\n                            pagesize: this.pagesize,\r\n                            condition: this.condition\r\n                        }).then(res => {\r\n                            if (res.data.code == 200) {\r\n                                this.billTableData = res.data.data;\r\n                                this.totalBill = res.data.data[0].totalBill;\r\n                            }\r\n                        });\r\n                    } else if (this.onSubmitFlag == true) {\r\n                        this.$http.post('/bill/getOnSubmit', {\r\n                            currentPage: this.currentPage,\r\n                            pagesize: this.pagesize\r\n                        }).then(res => {\r\n                            if (res.data.code == 200) {\r\n                                this.billTableData = res.data.data\r\n                                this.totalBill = res.data.data[0].totalBill;\r\n                            }\r\n                        });\r\n                    } else {\r\n                        this.getBills();\r\n                    }\r\n                } else {\r\n                    if (this.conditionFlag == true) {\r\n                        this.$http.post('/bill/conditionSearch', {\r\n                            currentPage: this.currentPage,\r\n                            pagesize: this.pagesize,\r\n                            condition: this.condition,\r\n                            sort: this.sort,\r\n                            order: this.order\r\n                        }).then(res => {\r\n                            if (res.data.code == 200) {\r\n                                this.billTableData = res.data.data;\r\n                                this.totalBill = res.data.data[0].totalBill;\r\n                            }\r\n                        });//then是返回的东西是res 括号里面对res的操作\r\n                    } else if (this.onSubmitFlag == true) {\r\n                        this.$http.post('/bill/getOnSubmit', {\r\n                            currentPage: this.currentPage,\r\n                            pagesize: this.pagesize,\r\n                            sort: this.sort,\r\n                            order: this.order\r\n                        }).then(res => {\r\n                            if (res.data.code == 200) {\r\n                                this.billTableData = res.data.data\r\n                                this.totalBill = res.data.data[0].totalBill;\r\n                            }\r\n                        });\r\n                    } else {\r\n                        this.$http.post('/bill/getBills', {\r\n                            currentPage: this.currentPage,\r\n                            pagesize: this.pagesize,\r\n                            sort: this.sort,\r\n                            order: this.order\r\n                        }).then(res => {\r\n                            if (res.data.code == 200) {\r\n                                this.billTableData = res.data.data;\r\n                                this.totalBill = res.data.data[0].totalBill;\r\n                            }\r\n                        });\r\n                    }\r\n                }\r\n            },\r\n\r\n            //帳票詳細をクリアする\r\n            clearBill() {\r\n                this.bill = {\r\n                    billType: '',\r\n                    customer: '',\r\n                    remark: '',\r\n                    transactionAmount: '',\r\n                    transactionymd: '',\r\n                    updateUserName: '',\r\n                    updateymd: '',\r\n                    imageUrl: '',\r\n                    Logs: [],\r\n                };\r\n            },\r\n\r\n            //帳票データを取得する\r\n            getBills() {\r\n                this.$http.post('/bill/getBills', { currentPage: this.currentPage, pagesize: this.pagesize })\r\n                    .then(res => {\r\n                        if (res.data.code == 200) {\r\n                            this.billTableData = res.data.data;\r\n                            this.totalBill = res.data.data[0].totalBill;\r\n                        }\r\n                    });\r\n            },\r\n            //チェックボックスを選択する\r\n            handleSelectionChange(val) {\r\n                this.multipleSelection = [];\r\n                val.forEach(element => {\r\n                    this.multipleSelection.push(element.billno);\r\n                });\r\n            },\r\n            //検索ボタン\r\n            search() {\r\n\r\n                // ⬇️校验逻辑\r\n                const dateFrom = new Date(this.condition.transactionDateFrom);\r\n                const dateTo = new Date(this.condition.transactionDateTo);\r\n                if (dateFrom > dateTo) {\r\n                    this.$message({ \r\n                        type: 'error',\r\n                        message: '開始日は終了日より小さい'\r\n                    });\r\n                    return;\r\n                }\r\n                let AmountFrom = Number(this.condition.transactionAmountFrom);\r\n                let AmountTo = Number(this.condition.transactionAmountTo);\r\n                if (this.condition.transactionAmountFrom != '' && this.condition.transactionAmountTo != '') {\r\n                    if (AmountFrom > AmountTo) {\r\n                        this.$message({\r\n                            type: 'error',\r\n                            message: '金額範囲は0より小さい'\r\n                        });\r\n                        return;\r\n                    }\r\n                } \r\n                // 上面是数据校验\r\n\r\n                // 下面是数据处理逻辑\r\n\r\n                // **记得加flag处理\r\n                this.conditionFlag = true;\r\n                this.onSubmitFlag = false;\r\n                // \r\n                this.onWaitFlag = false;\r\n                // \r\n                this.currentPage = 1;//重置\r\n                this.$http.post('/bill/conditionSearch', {\r\n                    currentPage: this.currentPage,\r\n                    pagesize: this.pagesize,\r\n                    condition: this.condition\r\n                }).then(res => {\r\n                    if (res.data.code == 200) {\r\n                        this.billTableData = res.data.data;\r\n                        this.totalBill = res.data.data[0].totalBill;\r\n                        // totalBill 计算页数 \r\n                    }\r\n                });\r\n            },\r\n            //クリアボタン  \r\n            clear() {\r\n                this.condition.transactionDateFrom = '';\r\n                this.condition.transactionDateTo = '';\r\n                this.condition.transactionAmountFrom = '';\r\n                this.condition.transactionAmountTo = '';\r\n                this.condition.customerno = '';\r\n                this.condition.billTypeno = '';\r\n                this.condition.updateuserid = '';\r\n                this.onSubmitFlag = false;\r\n                this.conditionFlag = false;\r\n                // \r\n                this.onWaitFlag = false;\r\n                // \r\n                this.currentPage = 1;\r\n                this.sortFlag = false;\r\n                this.sort = null;\r\n                this.order = null;\r\n                this.getBills();\r\n            },\r\n            //承認待ちボタン\r\n            onSubmit() {\r\n                this.onSubmitFlag = true;\r\n                this.conditionFlag = false;\r\n                // \r\n                this.onWaitFlag = false;\r\n                // \r\n                this.currentPage = 1;\r\n                this.$http.post('/bill/getOnSubmit', {\r\n                    currentPage: this.currentPage,\r\n                    pagesize: this.pagesize\r\n                }).then(res => {\r\n                    if (res.data.code == 200) {\r\n                        this.billTableData = res.data.data;\r\n                        this.totalBill = res.data.data[0].totalBill;\r\n                    }\r\n                });\r\n            },\r\n            // \r\n            // 所有的flag同时加入判断 按钮\r\n            // \r\n            onWait() {\r\n                this.onSubmitFlag = false;\r\n                this.conditionFlag = false;\r\n                // \r\n                this.onWaitFlag = true;\r\n                // \r\n                this.currentPage = 1;\r\n                this.$http.post('/bill/getOnWait', {\r\n                    currentPage: this.currentPage,\r\n                    pagesize: this.pagesize\r\n                }).then(res => {\r\n                    if (res.data.code == 200) {\r\n                        this.billTableData = res.data.data;\r\n                        this.totalBill = res.data.data[0].totalBill;\r\n                    }\r\n                });\r\n            },\r\n\r\n            // \r\n            //ダウンロードボタン\r\n            download() {\r\n                this.$http.post('/bill/downloadBill', this.multipleSelection, { responseType: 'blob' }).then(res => {\r\n                    const blob = new Blob([res.data]);\r\n                    const url = window.URL.createObjectURL(blob);\r\n\r\n                    // 创建一个 <a> 标签用于下载\r\n                    const link = document.createElement('a');\r\n                    link.href = url;\r\n                    link.download = 'downloaded_file.txt'; // 设置下载文件的名称\r\n                    link.click();\r\n\r\n                    // 释放资源\r\n                    window.URL.revokeObjectURL(url);\r\n                });\r\n            },\r\n            //当帳票の詳細を表示する\r\n            handleRowClick(row) {\r\n                this.$http.get('/bill/getBillDetails/' + row.billno).then(res => {\r\n                    if (res.data.code == 200) {\r\n                        for (let i = 0; i < res.data.data.length; i++) {\r\n                            if (i == 0) {\r\n                                this.bill = res.data.data[i];\r\n                            } else {\r\n                                this.bill.Logs[i] = res.data.data[i];\r\n                            }\r\n\r\n                        }\r\n                    }\r\n                });\r\n                //編集権限を判断する\r\n                if (this.bill.reviewStatus == 1) {\r\n                    this.agreeBt = true;\r\n                    this.disagreeBt = true;\r\n                }\r\n                if (!this.bill.editPermissions) {\r\n                    if (sessionStorage.getItem(\"rolesno\") == 4 || sessionStorage.getItem(\"rolesno\") == 3) {\r\n                        this.editPermissonsBt = true;\r\n                    }\r\n                    this.editBt = true;\r\n                } else {\r\n                    this.editPermissonsBt = false;\r\n                }\r\n                this.drawerflag = true;\r\n            },\r\n            //アップロードしたファイルを表示する\r\n            handleAvatarSuccess(response) {\r\n                console.log(response);\r\n                this.bill.imageUrl = response;\r\n            },\r\n            //サーバーからデータを取得する\r\n            loadCustomers() {\r\n                this.$http.get('/category/getCustomers').then(res => {\r\n                    if (res.data.code == 200) {\r\n                        this.customers = res.data.data;\r\n                    }\r\n                });\r\n            },\r\n            loadBillTypes() {\r\n                this.$http.get('/category/getBillTypes').then(res => {\r\n                    if (res.data.code == 200) {\r\n                        this.billTypes = res.data.data;\r\n                    }\r\n                });\r\n            },\r\n            loadUpdateUsers() {\r\n                this.$http.get('/bill/getUpdateUserids').then(res => {\r\n                    if (res.data.code == 200) {\r\n                        this.updateUsers = res.data.data;\r\n                    }\r\n                });\r\n            },\r\n        },\r\n        //画面がロードされたら、取引先などのデータを取得する\r\n        mounted() {\r\n            this.loadCustomers();\r\n            this.loadBillTypes();\r\n            this.loadUpdateUsers();\r\n            this.getBills();\r\n            var rolesno = sessionStorage.getItem(\"rolesno\");\r\n            switch (rolesno) {\r\n                // \r\n                case '1':\r\n                    this.reviewBt = false;\r\n                    this.downloadBt = false;\r\n                    this.editBt = false;\r\n                  \r\n                    break;\r\n                case '2':\r\n                    this.reviewBt = false;\r\n                    this.downloadBt = true;\r\n                    break;\r\n                case '3':\r\n                    this.reviewBt = true;\r\n                    this.downloadBt = true;\r\n                    this.agreeBt = false;\r\n                    this.disagreeBt = false;\r\n                    \r\n                    break;\r\n                case \"4\":\r\n                    this.editFlag = true;\r\n                    this.reviewBt = true;\r\n                    this.downloadBt = true;\r\n                    this.editBt = false;\r\n                    this.agreeBt = false;\r\n                    this.disagreeBt = false;\r\n                    this.editPermissonsBt = true;\r\n                    break;\r\n            }\r\n\r\n            //日付の設定\r\n            // \r\n            flatpickr(this.$refs.datepickerInput1, {\r\n                dateFormat: 'Y/m/d',\r\n                locale: 'ja',\r\n                firstDayOfWeek: '0',\r\n                allowInput: 'true',\r\n                minDate: \"1990/01/01\",\r\n                maxDate: \"today\",\r\n\r\n            });\r\n            flatpickr(this.$refs.datepickerInput2, {\r\n                dateFormat: 'Y/m/d',\r\n                locale: 'ja',\r\n                firstDayOfWeek: '0',\r\n                allowInput: 'true',\r\n                minDate: \"1990/01/01\",\r\n                maxDate: \"today\",\r\n            });\r\n\r\n\r\n        },\r\n\r\n    }\r\n</script>\r\n\r\n<style scoped>\r\n    .el-table :deep() .cell {\r\n        /* overflow: hidden; */\r\n        /* text-overflow: ellipsis; */\r\n        white-space: nowrap;\r\n\r\n    }\r\n\r\n    .block {\r\n        position: absolute;\r\n        bottom: 40px;\r\n        text-align: center;\r\n        width: 88%;\r\n    }\r\n\r\n    .avatar-uploader .el-upload {\r\n        border: 1px dashed #d9d9d9;\r\n        border-radius: 6px;\r\n        cursor: pointer;\r\n        position: relative;\r\n        overflow: hidden;\r\n    }\r\n\r\n    .avatar-uploader .el-upload:hover {\r\n        border-color: #409EFF;\r\n    }\r\n\r\n    .avatar-uploader-icon {\r\n        font-size: 28px;\r\n        color: #8c939d;\r\n        width: 178px;\r\n        height: 178px;\r\n        line-height: 178px;\r\n        text-align: center;\r\n    }\r\n\r\n    .avatar {\r\n        width: 178px;\r\n        height: 178px;\r\n        display: block;\r\n    }\r\n\r\n    .el-button {\r\n        margin: 5px;\r\n    }\r\n</style>"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}