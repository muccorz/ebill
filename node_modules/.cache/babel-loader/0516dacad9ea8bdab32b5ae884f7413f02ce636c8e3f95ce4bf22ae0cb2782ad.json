{"ast":null,"code":"export default {\n  data() {\n    return {\n      addCustomerBt: true,\n      path: '',\n      dialogFormVisible: false,\n      billType: {\n        billType: ''\n      },\n      customer: {\n        customer: '',\n        customerType: ''\n      },\n      billTypes: [{\n        billTypeno: 1,\n        billType: '請求書'\n      }, {\n        billTypeno: 2,\n        billType: '納品書'\n      }, {\n        billTypeno: 3,\n        billType: '見積書'\n      }],\n      customers: [{\n        customerno: 1,\n        customer: 'abc株式会社',\n        customerType: '顧客'\n      }, {\n        customerno: 2,\n        customer: 'dad株式会社',\n        customerType: '納品先'\n      }, {\n        customerno: 3,\n        customer: 'gsg株式会社',\n        customerType: '横持ち先'\n      }]\n    };\n  },\n  name: 'categoryView',\n  computed: {\n    addCustomerBt() {\n      return this.customer.customer != '' && this.customer.customerType != '';\n    }\n  },\n  // created() {\n  //     this.billsInit()\n  //     this.costumersInit()\n  // },\n  methods: {\n    deleteCustomer(customerno) {\n      this.$confirm('これで取引先は完全に削除されます，続きますが？', '取引先を消しますが？', {\n        confirmButtonText: '続く',\n        cancelButtonText: 'キャンセル',\n        type: 'warning'\n      }).then(() => {\n        this.$http.get('/category/deleteCustomer' + customerno).then(res => {\n          if (res.data.code === 200) {\n            this.$message({\n              type: 'success',\n              message: '削除成功'\n            });\n            this.customerInit();\n          }\n        });\n      }).catch(() => {});\n    },\n    addCustomer() {\n      this.$http.post('/category/addCustomer', this.customer).then(res => {\n        if (res.data.code === 200) {\n          this.$message({\n            type: 'success',\n            message: '新規成功'\n          });\n          this.costomersInit();\n          this.costomerInit();\n        }\n      });\n      this.dialogFormVisible = false;\n    },\n    deleteBillType(billTypeno) {\n      this.$confirm('これで帳票種類は完全に削除されます，続きますが？', '帳票種類を消しますが？', {\n        confirmButtonText: '続く',\n        cancelButtonText: 'キャンセル',\n        type: 'warning'\n      }).then(() => {\n        this.$http.get('/category/deleteBillType/' + billTypeno).then(res => {\n          if (res.data.code === 200) {\n            this.$message({\n              type: 'success',\n              message: '削除成功'\n            });\n            this.billInit();\n          }\n        });\n      }).catch(() => {});\n    },\n    addBillType() {\n      this.$prompt('帳票種類を入力ください', '帳票種類新規', {\n        confirmButtonText: '确定',\n        cancelButtonText: '取消'\n      }).then(({\n        value\n      }) => {\n        this.$http.get('/category/addBillType/' + value).then(res => {\n          if (res.data.code === 200) {\n            this.$message({\n              type: 'success',\n              message: '新規成功'\n            });\n            this.billInit();\n          }\n        });\n      }).catch(() => {});\n    },\n    handleFolderChange(e) {\n      const path = e.target.files[0].path;\n      this.path = path;\n    },\n    triggerFileInput() {\n      this.$refs.fileInput.click();\n    },\n    billsInit() {\n      this.$http.get('/category/getBillTypes').then(res => {\n        this.billTypes = res.data.data;\n      });\n    },\n    costomersInit() {\n      this.$http.get('/category/getCustomers').then(res => {\n        this.customers = res.data.data;\n      });\n    },\n    customerInit() {\n      this.customer.customer = '', this.customer.customerType = '';\n    }\n  }\n};","map":{"version":3,"names":["data","addCustomerBt","path","dialogFormVisible","billType","customer","customerType","billTypes","billTypeno","customers","customerno","name","computed","methods","deleteCustomer","$confirm","confirmButtonText","cancelButtonText","type","then","$http","get","res","code","$message","message","customerInit","catch","addCustomer","post","costomersInit","costomerInit","deleteBillType","billInit","addBillType","$prompt","value","handleFolderChange","e","target","files","triggerFileInput","$refs","fileInput","click","billsInit"],"sources":["src/views/category.vue"],"sourcesContent":["<template>\r\n    <div style=\"text-align: left;\">\r\n        <div class=\"h4\" style=\"font-weight: 700;text-align:left\">カテゴリー管理</div>\r\n        <el-divider></el-divider>\r\n        <p>ファイル保存先フォルダ設定</p>\r\n        <el-input v-model=\"path\" placeholder=\"输入或选择路径\" style=\"width: 300px;\"></el-input>\r\n        <el-button @click=\"triggerFileInput\">\r\n            <input type=\"file\" style=\"display: none;\" ref=\"fileInput\" directory webkitdirectory mozdirectory msdirectory\r\n                odirectory @change=\"handleFolderChange\">\r\n            パス選択</el-button>\r\n        <el-divider></el-divider>\r\n        <div class=\"d-flex\" style=\"justify-content: space-around\">\r\n            <!-- 帳票種類一覧と編集 -->\r\n            <el-card class=\"box-card\">\r\n                <div slot=\"header\" class=\"clearfix\">\r\n                    <span>帳票種類</span>\r\n                    <el-button style=\"float: right; padding: 3px 0\" type=\"text\" @click=\"addBillType\">新規</el-button>\r\n                </div>\r\n                <div v-for=\"billType in billTypes\" :key=\"billType.billTypeno\" class=\"text item d-flex \"\r\n                    style=\"justify-content: space-between\">\r\n                    <div>{{billType.billType}}</div>\r\n                    <el-button size=\"mini\" type=\"danger\" icon=\"el-icon-delete\"\r\n                        @click=\"deleteBillType(billType.billTypeno)\">削除</el-button>\r\n                </div>\r\n            </el-card>\r\n            <!-- 取引先一覧と編集 -->\r\n            <el-card class=\"box-card\">\r\n                <div slot=\"header\" class=\"clearfix\">\r\n                    <span>取引先</span>\r\n                    <el-button style=\"float: right; padding: 3px 0\" type=\"text\"\r\n                        @click=\"dialogFormVisible= true\">新規</el-button>\r\n                    <el-dialog title=\"取引先新規\" :visible.sync=\"dialogFormVisible\" @closed=\"customerInit\">\r\n                        <el-form :model=\"customer\">\r\n                            <el-form-item label=\"取引先\">\r\n                                <el-input v-model=\"customer.customer\" autocomplete=\"off\"></el-input>\r\n                            </el-form-item>\r\n                            <el-form-item label=\"取引先種類\">\r\n                                <el-input v-model=\"customer.customerType\" autocomplete=\"off\"></el-input>\r\n                            </el-form-item>\r\n                        </el-form>\r\n                        <div slot=\"footer\" class=\"dialog-footer\">\r\n                            <el-button @click=\"dialogFormVisible = false\">キャンセル</el-button>\r\n                            <el-button type=\"primary\" @click=\"addCustomer\" :disabled=\"addCustomerBt\">追 加</el-button>\r\n                        </div>\r\n                    </el-dialog>\r\n                </div>\r\n                <div v-for=\"customer in customers\" :key=\"customer.customerno\" class=\"text item d-flex \"\r\n                    style=\"justify-content: space-between\">\r\n                    <div style=\"width: 120px;\">{{customer.customer}}</div>\r\n                    <div>{{customer.customerType}}</div>\r\n                    <el-button size=\"mini\" type=\"danger\" icon=\"el-icon-delete\"\r\n                        @click=\"deleteCustomer(customer.customerno)\">削除</el-button>\r\n                </div>\r\n            </el-card>\r\n        </div>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\n    export default {\r\n        data() {\r\n            return {\r\n                addCustomerBt: true,\r\n                path: '',\r\n                dialogFormVisible: false,\r\n                billType: {\r\n                    billType: ''\r\n                },\r\n                customer: {\r\n                    customer: '',\r\n                    customerType: ''\r\n                },\r\n                billTypes: [\r\n                    {\r\n                        billTypeno: 1,\r\n                        billType: '請求書'\r\n                    },\r\n                    {\r\n                        billTypeno: 2,\r\n                        billType: '納品書'\r\n                    },\r\n                    {\r\n                        billTypeno: 3,\r\n                        billType: '見積書'\r\n                    },\r\n                ],\r\n                customers: [\r\n                    {\r\n                        customerno: 1,\r\n                        customer: 'abc株式会社',\r\n                        customerType: '顧客'\r\n                    },\r\n                    {\r\n                        customerno: 2,\r\n                        customer: 'dad株式会社',\r\n                        customerType: '納品先'\r\n                    },\r\n                    {\r\n                        customerno: 3,\r\n                        customer: 'gsg株式会社',\r\n                        customerType: '横持ち先'\r\n                    },\r\n                ]\r\n\r\n            }\r\n        },\r\n        name: 'categoryView',\r\n        computed: {\r\n            addCustomerBt() {\r\n                return this.customer.customer != '' && this.customer.customerType != ''\r\n            }\r\n        },\r\n        // created() {\r\n        //     this.billsInit()\r\n        //     this.costumersInit()\r\n        // },\r\n        methods: {\r\n            deleteCustomer(customerno){\r\n                this.$confirm('これで取引先は完全に削除されます，続きますが？', '取引先を消しますが？', {\r\n                    confirmButtonText: '続く',\r\n                    cancelButtonText: 'キャンセル',\r\n                    type: 'warning'\r\n                }).then(() => {\r\n                    this.$http.get('/category/deleteCustomer' + customerno)\r\n                        .then(res => {\r\n                            if (res.data.code === 200) {\r\n                                this.$message({\r\n                                    type: 'success',\r\n                                    message: '削除成功'\r\n                                });\r\n                                this.customerInit()\r\n                            }\r\n                        })\r\n                }).catch(() => { });\r\n            },\r\n\r\n            addCustomer() {\r\n                this.$http.post('/category/addCustomer', this.customer)\r\n                .then(res => {\r\n                    if (res.data.code === 200) {\r\n                        this.$message({\r\n                            type: 'success',\r\n                            message: '新規成功'\r\n                        });\r\n                        this.costomersInit()\r\n                        this.costomerInit()\r\n                    }\r\n                })\r\n                this.dialogFormVisible = false\r\n            },\r\n            deleteBillType(billTypeno) {\r\n                this.$confirm('これで帳票種類は完全に削除されます，続きますが？', '帳票種類を消しますが？', {\r\n                    confirmButtonText: '続く',\r\n                    cancelButtonText: 'キャンセル',\r\n                    type: 'warning'\r\n                }).then(() => {\r\n                    this.$http.get('/category/deleteBillType/' + billTypeno)\r\n                        .then(res => {\r\n                            if (res.data.code === 200) {\r\n                                this.$message({\r\n                                    type: 'success',\r\n                                    message: '削除成功'\r\n                                });\r\n                                this.billInit()\r\n                            }\r\n                        })\r\n                }).catch(() => { });\r\n            },\r\n            addBillType() {\r\n                this.$prompt('帳票種類を入力ください', '帳票種類新規', {\r\n                    confirmButtonText: '确定',\r\n                    cancelButtonText: '取消',\r\n                }).then(({ value }) => {\r\n                    this.$http.get('/category/addBillType/' + value)\r\n                        .then(res => {\r\n                            if (res.data.code === 200) {\r\n                                this.$message({\r\n                                    type: 'success',\r\n                                    message: '新規成功'\r\n                                });\r\n                                this.billInit()\r\n                            }\r\n                        })\r\n                }).catch(() => { });\r\n            },\r\n            handleFolderChange(e) {\r\n                const path = e.target.files[0].path\r\n                this.path = path\r\n            },\r\n            triggerFileInput() {\r\n                this.$refs.fileInput.click();\r\n            },\r\n            billsInit() {\r\n                this.$http.get('/category/getBillTypes')\r\n                    .then(res => {\r\n                        this.billTypes = res.data.data\r\n                    })\r\n            },\r\n            costomersInit() {\r\n                this.$http.get('/category/getCustomers')\r\n                    .then(res => {\r\n                        this.customers = res.data.data\r\n                    })\r\n            },\r\n            customerInit() {\r\n                this.customer.customer = '',\r\n                    this.customer.customerType = ''\r\n            }\r\n\r\n        },\r\n    }\r\n\r\n</script>\r\n\r\n<style scoped>\r\n    .text {\r\n        font-size: 14px;\r\n    }\r\n\r\n    .item {\r\n        margin-bottom: 18px;\r\n    }\r\n\r\n    .clearfix:before,\r\n    .clearfix:after {\r\n        display: table;\r\n        content: \"\";\r\n    }\r\n\r\n    .clearfix:after {\r\n        clear: both\r\n    }\r\n\r\n    .box-card {\r\n        width: 480px;\r\n    }\r\n</style>"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}