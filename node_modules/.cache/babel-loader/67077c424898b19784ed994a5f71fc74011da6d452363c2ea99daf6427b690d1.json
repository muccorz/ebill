{"ast":null,"code":"export default {\n  name: 'rolesView',\n  data() {\n    return {\n      CreateUserVisible: false,\n      editUserVisible: false,\n      //ユーザー新規フォーム\n      user: {\n        username: '',\n        password: '',\n        rolesno: ''\n      },\n      formLabelWidth: '100px',\n      //サーバーから取得したユーザーデータ\n      users: [{\n        userno: '0001',\n        username: '田代 太郎',\n        rolesno: '1'\n      }, {\n        userno: '0002',\n        username: '毛賀 次郎',\n        rolesno: '2'\n      }, {\n        userno: '0003',\n        username: '埼玉 花子',\n        rolesno: '3'\n      }, {\n        userno: '0004',\n        username: '山田 三郎',\n        rolesno: '4'\n      }],\n      flag1: false,\n      flag2: false,\n      flag3: false\n    };\n  },\n  computed: {\n    canLogin() {\n      return !this.flag1 && !this.flag2 && !this.flag3;\n    }\n  },\n  created() {\n    // this.init()\n  },\n  methods: {\n    editUser(user) {\n      this.editUserVisible = true, this.user.username = user.username, this.user.rolesno = user.rolesno;\n    },\n    deleteUser(user) {\n      this.$http.post(\"/user/deleteUser/\" + user.id).then(res => {\n        if (res.data.code == 200) {\n          this.$message({\n            message: '删除成功',\n            type: 'success'\n          });\n          this.init();\n        }\n      });\n    },\n    createUser() {\n      this.$http.post(\"/user/createUser\", this.user).then(res => {\n        if (res.data.code == 200) {\n          this.CreateUserVisible = false;\n          this.$message({\n            message: 'ユーザー新規成功',\n            type: 'success'\n          });\n          this.init();\n        }\n      });\n    },\n    deleteCourse(course) {\n      this.$confirm('このユーザー削除しますか？', '提示', {\n        confirmButtonText: '確認',\n        cancelButtonText: 'キャンセル',\n        type: 'warning'\n      }).then(() => {\n        this.$http.post(\"/course/deleteCourse/\" + course.id).then(res => {\n          if (res.data.code == 200) {\n            this.$message({\n              message: '删除成功',\n              type: 'success'\n            });\n            this.init();\n          }\n        });\n      }).catch(() => {\n        this.$message({\n          type: 'info',\n          message: '已取消删除'\n        });\n      });\n    },\n    userFormatter(row) {\n      if (row.rolesno == 1) {\n        return '操作者';\n      } else if (row.rolesno == 2) {\n        return '閲覧者';\n      } else if (row.rolesno == 3) {\n        return '管理者';\n      } else if (row.rolesno == 4) {\n        return 'システム管理者';\n      }\n    },\n    //ユーザー一覧取得、初期化クリア\n    init() {\n      this.$http.post(\"/user/getUsers\").then(res => {\n        if (res.data.code == 200) {\n          this.users = res.data.data;\n        }\n      });\n      this.user = {\n        username: '',\n        password: '',\n        rolesno: ''\n      };\n    }\n  }\n};","map":{"version":3,"names":["name","data","CreateUserVisible","editUserVisible","user","username","password","rolesno","formLabelWidth","users","userno","flag1","flag2","flag3","computed","canLogin","created","methods","editUser","deleteUser","$http","post","id","then","res","code","$message","message","type","init","createUser","deleteCourse","course","$confirm","confirmButtonText","cancelButtonText","catch","userFormatter","row"],"sources":["src/views/roles.vue"],"sourcesContent":["<template>\r\n    <div style=\"text-align: left;\">\r\n        <div class=\"h4\" style=\"font-weight: 700;text-align:left\">権限管理</div>\r\n        <el-button type=\"primary\" class=\"mt-2 el-icon-edit\" @click=\"CreateUserVisible= true\">ユーザー新規</el-button>\r\n        <!-- ユーザー新規ダイアログ -->\r\n        <el-dialog title=\"ユーザー新規\" :visible.sync=\"CreateUserVisible\">\r\n            <el-form :model=\"user\">\r\n                <el-form-item label=\"ユーザー名\" :label-width=\"formLabelWidth\">\r\n                    <span class=\"text-danger\" style=\"font-size: 12px;\" v-if=\"flag1\">ユーザーIDを入力してください</span>\r\n                    <span class=\"text-danger\" style=\"font-size: 12px;\" v-if=\"flag3\">ユーザーIDは数字のみ</span>\r\n                    <el-input v-model=\"user.name\" placeholder=\"ユーザーIDを入力してください\" @blur=\"handleName\"></el-input>\r\n                </el-form-item>\r\n                <el-form-item label=\"パスワード\" :label-width=\"formLabelWidth\">\r\n                    <span class=\"text-danger\" style=\"font-size: 12px;\" v-if=\"flag2\">パスワードを入力してください</span>\r\n                    <el-input v-model=\"user.password\" placeholder=\"パスワードを入力してください\" show-password\r\n                        @blur=\"handlePassword\"></el-input>\r\n                </el-form-item>\r\n                <el-form-item label=\"ユーザー権限\" :label-width=\"formLabelWidth\">\r\n                    <el-select v-model=\"user.rolesno\" placeholder=\"権限種類\">\r\n                        <el-option label=\"操作者\" value=\"1\"></el-option>\r\n                        <el-option label=\"閲覧者\" value=\"2\"></el-option>\r\n                        <el-option label=\"管理者\" value=\"3\"></el-option>\r\n                        <el-option label=\"システム管理者\" value=\"4\"></el-option>\r\n                    </el-select>\r\n                </el-form-item>\r\n            </el-form>\r\n            <div slot=\"footer\" class=\"dialog-footer\">\r\n                <el-button @click=\"CreateUserVisible = false\">キャンセル</el-button>\r\n                <el-button type=\"primary\" @click=\"createUser\">追 加</el-button>\r\n            </div>\r\n        </el-dialog>\r\n\r\n        <el-table :data=\"users\" style=\"width: 100%\">\r\n            <el-table-column prop=\"userno\" label=\"ユーザー番号\">\r\n            </el-table-column>\r\n            <el-table-column prop=\"username\" label=\"ユーザー名\">\r\n            </el-table-column>\r\n            <el-table-column prop=\"rolesno\" label=\"権限\" :formatter=\"userFormatter\">\r\n            </el-table-column>\r\n            <el-table-column prop=\"address\" label=\"操作\">\r\n                <template slot-scope=\"scope\">\r\n                    <button type=\"button\" class=\"el-button el-button--primary el-button--small\"\r\n                        @click=\"editUser(scope.row)\">編集</button>\r\n                    <!-- ユーザー編集ダイアログ -->\r\n                    <el-dialog title=\"ユーザー編集\" :visible.sync=\"editUserVisible\">\r\n                        <el-form :model=\"user\">\r\n                            <el-form-item label=\"ユーザー名\" :label-width=\"formLabelWidth\">\r\n                                <el-input v-model=\"user.username\" autocomplete=\"off\"\r\n                                    placeholder=\"ユーザー名を入力してください\"></el-input>\r\n                            </el-form-item>\r\n                            <el-form-item label=\"パスワード\" :label-width=\"formLabelWidth\">\r\n                                <el-input v-model=\"user.password\" show-password autocomplete=\"off\"\r\n                                    placeholder=\"新しいパスワードを入力してください\"></el-input>\r\n                            </el-form-item>\r\n                            <el-form-item label=\"ユーザー権限\" :label-width=\"formLabelWidth\">\r\n                                <el-select v-model=\"user.rolesno\" placeholder=\"権限種類\">\r\n                                    <el-option label=\"操作者\" value=\"1\"></el-option>\r\n                                    <el-option label=\"閲覧者\" value=\"2\"></el-option>\r\n                                    <el-option label=\"管理者\" value=\"3\"></el-option>\r\n                                    <el-option label=\"システム管理者\" value=\"4\"></el-option>\r\n                                </el-select>\r\n                            </el-form-item>\r\n                        </el-form>\r\n                        <div slot=\"footer\" class=\"dialog-footer\">\r\n                            <el-button @click=\"editUserVisible = false\">キャンセル</el-button>\r\n                            <el-button type=\"primary\" @click=\"createUser\">完了</el-button>\r\n                        </div>\r\n                    </el-dialog>\r\n                    <button type=\"button\" class=\"el-button el-button--danger el-button--small\"\r\n                        @click=\"deleteUser(scope.row)\">削除</button>\r\n                </template>\r\n\r\n            </el-table-column>\r\n        </el-table>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\n    export default {\r\n        name: 'rolesView',\r\n        data() {\r\n            return {\r\n                CreateUserVisible: false,\r\n                editUserVisible: false,\r\n                //ユーザー新規フォーム\r\n                user: {\r\n                    username: '',\r\n                    password: '',\r\n                    rolesno: ''\r\n                },\r\n                formLabelWidth: '100px',\r\n                //サーバーから取得したユーザーデータ\r\n                users: [{\r\n                    userno: '0001',\r\n                    username: '田代 太郎',\r\n                    rolesno: '1'\r\n                }, {\r\n                    userno: '0002',\r\n                    username: '毛賀 次郎',\r\n                    rolesno: '2'\r\n                }, {\r\n                    userno: '0003',\r\n                    username: '埼玉 花子',\r\n                    rolesno: '3'\r\n                }, {\r\n                    userno: '0004',\r\n                    username: '山田 三郎',\r\n                    rolesno: '4'\r\n                }],\r\n                flag1: false,\r\n                flag2: false,\r\n                flag3: false,\r\n            }\r\n        },\r\n        computed: {\r\n            canLogin() {\r\n                return !this.flag1 && !this.flag2 && !this.flag3;\r\n            }\r\n        },\r\n        created() {\r\n            // this.init()\r\n        },\r\n        methods: {\r\n            editUser(user) {\r\n                this.editUserVisible = true,\r\n                    this.user.username = user.username,\r\n                    this.user.rolesno = user.rolesno\r\n            },\r\n            deleteUser(user) {\r\n                this.$http\r\n                    .post(\"/user/deleteUser/\" + user.id)\r\n                    .then(res => {\r\n                        if (res.data.code == 200) {\r\n                            this.$message({\r\n                                message: '删除成功',\r\n                                type: 'success'\r\n                            });\r\n                            this.init()\r\n                        }\r\n                    })\r\n            },\r\n            createUser() {\r\n                this.$http\r\n                    .post(\"/user/createUser\", this.user)\r\n                    .then(res => {\r\n                        if (res.data.code == 200) {\r\n                            this.CreateUserVisible = false;\r\n                            this.$message({\r\n                                message: 'ユーザー新規成功',\r\n                                type: 'success'\r\n                            });\r\n                            this.init();\r\n                        }\r\n                    })\r\n            },\r\n            deleteCourse(course) {\r\n                this.$confirm('このユーザー削除しますか？', '提示', {\r\n                    confirmButtonText: '確認',\r\n                    cancelButtonText: 'キャンセル',\r\n                    type: 'warning'\r\n                }).then(() => {\r\n                    this.$http\r\n                        .post(\"/course/deleteCourse/\" + course.id)\r\n                        .then(res => {\r\n                            if (res.data.code == 200) {\r\n                                this.$message({\r\n                                    message: '删除成功',\r\n                                    type: 'success'\r\n                                });\r\n                                this.init()\r\n                            }\r\n                        })\r\n                }).catch(() => {\r\n                    this.$message({\r\n                        type: 'info',\r\n                        message: '已取消删除'\r\n                    });\r\n                })\r\n            },\r\n            userFormatter(row) {\r\n                if (row.rolesno == 1) {\r\n                    return '操作者'\r\n                } else if (row.rolesno == 2) {\r\n                    return '閲覧者'\r\n                } else if (row.rolesno == 3) {\r\n                    return '管理者'\r\n                } else if (row.rolesno == 4) {\r\n                    return 'システム管理者'\r\n                }\r\n            },\r\n            //ユーザー一覧取得、初期化クリア\r\n            init() {\r\n                this.$http\r\n                    .post(\"/user/getUsers\")\r\n                    .then(res => {\r\n                        if (res.data.code == 200) {\r\n                            this.users = res.data.data\r\n                        }\r\n                    })\r\n                this.user = {\r\n                    username: '',\r\n                    password: '',\r\n                    rolesno: ''\r\n                }\r\n            }\r\n        },\r\n    }\r\n</script>\r\n<style scoped>\r\n\r\n</style>"],"mappings":"AA8EA;EACAA,IAAA;EACAC,KAAA;IACA;MACAC,iBAAA;MACAC,eAAA;MACA;MACAC,IAAA;QACAC,QAAA;QACAC,QAAA;QACAC,OAAA;MACA;MACAC,cAAA;MACA;MACAC,KAAA;QACAC,MAAA;QACAL,QAAA;QACAE,OAAA;MACA;QACAG,MAAA;QACAL,QAAA;QACAE,OAAA;MACA;QACAG,MAAA;QACAL,QAAA;QACAE,OAAA;MACA;QACAG,MAAA;QACAL,QAAA;QACAE,OAAA;MACA;MACAI,KAAA;MACAC,KAAA;MACAC,KAAA;IACA;EACA;EACAC,QAAA;IACAC,SAAA;MACA,aAAAJ,KAAA,UAAAC,KAAA,UAAAC,KAAA;IACA;EACA;EACAG,QAAA;IACA;EAAA,CACA;EACAC,OAAA;IACAC,SAAAd,IAAA;MACA,KAAAD,eAAA,SACA,KAAAC,IAAA,CAAAC,QAAA,GAAAD,IAAA,CAAAC,QAAA,EACA,KAAAD,IAAA,CAAAG,OAAA,GAAAH,IAAA,CAAAG,OAAA;IACA;IACAY,WAAAf,IAAA;MACA,KAAAgB,KAAA,CACAC,IAAA,uBAAAjB,IAAA,CAAAkB,EAAA,EACAC,IAAA,CAAAC,GAAA;QACA,IAAAA,GAAA,CAAAvB,IAAA,CAAAwB,IAAA;UACA,KAAAC,QAAA;YACAC,OAAA;YACAC,IAAA;UACA;UACA,KAAAC,IAAA;QACA;MACA;IACA;IACAC,WAAA;MACA,KAAAV,KAAA,CACAC,IAAA,0BAAAjB,IAAA,EACAmB,IAAA,CAAAC,GAAA;QACA,IAAAA,GAAA,CAAAvB,IAAA,CAAAwB,IAAA;UACA,KAAAvB,iBAAA;UACA,KAAAwB,QAAA;YACAC,OAAA;YACAC,IAAA;UACA;UACA,KAAAC,IAAA;QACA;MACA;IACA;IACAE,aAAAC,MAAA;MACA,KAAAC,QAAA;QACAC,iBAAA;QACAC,gBAAA;QACAP,IAAA;MACA,GAAAL,IAAA;QACA,KAAAH,KAAA,CACAC,IAAA,2BAAAW,MAAA,CAAAV,EAAA,EACAC,IAAA,CAAAC,GAAA;UACA,IAAAA,GAAA,CAAAvB,IAAA,CAAAwB,IAAA;YACA,KAAAC,QAAA;cACAC,OAAA;cACAC,IAAA;YACA;YACA,KAAAC,IAAA;UACA;QACA;MACA,GAAAO,KAAA;QACA,KAAAV,QAAA;UACAE,IAAA;UACAD,OAAA;QACA;MACA;IACA;IACAU,cAAAC,GAAA;MACA,IAAAA,GAAA,CAAA/B,OAAA;QACA;MACA,WAAA+B,GAAA,CAAA/B,OAAA;QACA;MACA,WAAA+B,GAAA,CAAA/B,OAAA;QACA;MACA,WAAA+B,GAAA,CAAA/B,OAAA;QACA;MACA;IACA;IACA;IACAsB,KAAA;MACA,KAAAT,KAAA,CACAC,IAAA,mBACAE,IAAA,CAAAC,GAAA;QACA,IAAAA,GAAA,CAAAvB,IAAA,CAAAwB,IAAA;UACA,KAAAhB,KAAA,GAAAe,GAAA,CAAAvB,IAAA,CAAAA,IAAA;QACA;MACA;MACA,KAAAG,IAAA;QACAC,QAAA;QACAC,QAAA;QACAC,OAAA;MACA;IACA;EACA;AACA"},"metadata":{},"sourceType":"module","externalDependencies":[]}