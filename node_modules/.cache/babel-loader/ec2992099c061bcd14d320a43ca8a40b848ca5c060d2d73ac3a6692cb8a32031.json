{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nexport default {\n  name: 'LoginView',\n  data() {\n    return {\n      // ユーザー情報\n      user: {\n        userid: '',\n        password: ''\n      },\n      // バリデーションフラグ\n      flag1: false,\n      flag2: false,\n      flag3: false\n    };\n  },\n  computed: {\n    canLogin() {\n      return !this.flag1 && !this.flag2 && !this.flag3 && this.user.userid.length != 0 && this.user.password.length != 0;\n    }\n  },\n  methods: {\n    // ユーザー名のバリデーション\n    handleUserid() {\n      if (this.user.userid == '') {\n        this.flag1 = true;\n      } else {\n        this.flag1 = false;\n      }\n      if (this.user.userid.length != 0 && !/^[0-9]+$/.test(this.user.userid)) {\n        this.flag3 = true;\n      } else {\n        this.flag3 = false;\n      }\n    },\n    // パスワードのバリデーション\n    handlePassword() {\n      if (this.user.password == '') {\n        this.flag2 = true;\n      } else {\n        this.flag2 = false;\n      }\n    },\n    // ログイン処理\n    login() {\n      // this.$http.post('/api/login', this.user)\n      // // ログイン成功，ホーム画面へ遷移\n      //   .then((response) => {\n      //     if (response.data.code == 200) {\n      //       this.$router.push({path: '/home'})\n      //     }\n      //   })\n      //   // ログイン失敗，エラーメッセージを表示\n      //   .catch((error) => {\n      //     console.log(error)\n      //   })\n      sessionStorage.setItem('username', '橋本良亮');\n      sessionStorage.setItem('rolesno', '4');\n      sessionStorage.setItem('userid', '10');\n      this.$router.push({\n        path: '/home'\n      });\n    }\n  }\n};","map":{"version":3,"names":["name","data","user","userid","password","flag1","flag2","flag3","computed","canLogin","length","methods","handleUserid","test","handlePassword","login","sessionStorage","setItem","$router","push","path"],"sources":["src/views/login.vue"],"sourcesContent":["<template>\r\n  <div id=\"app\">\r\n    <div class=\"d-flex h-100 position-absolute w-100 align-items-center justify-content-center\">\r\n      <el-card class=\"box-card\">\r\n        <div slot=\"header\" class=\"clearfix\">\r\n          <span>ユーザーログイン</span>\r\n        </div>\r\n        <el-form ref=\"form\" >\r\n          <el-form-item label=\"ユーザーID\">\r\n            <span class=\"text-danger\" style=\"font-size: 12px;\" v-if=\"flag1\">ユーザーIDを入力してください</span>\r\n            <span class=\"text-danger\" style=\"font-size: 12px;\" v-if=\"flag3\">ユーザーIDは数字のみ</span>\r\n            <el-input v-model=\"user.userid\" placeholder=\"ユーザーIDを入力してください\" @blur=\"handleUserid\"></el-input>\r\n          </el-form-item>\r\n          <el-form-item label=\"パスワード\">\r\n            <span class=\"text-danger\" style=\"font-size: 12px;\" v-if=\"flag2\">パスワードを入力してください</span>\r\n            <el-input v-model=\"user.password\" placeholder=\"パスワードを入力してください\" show-password @blur=\"handlePassword\"></el-input>\r\n          </el-form-item>\r\n          <el-form-item>\r\n            <el-button type=\"primary\" @click=\"login\" :disabled=\"!canLogin\">ログイン</el-button>\r\n          </el-form-item>\r\n        </el-form>\r\n      </el-card>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\n  export default {\r\n    name: 'LoginView',\r\n    data() {\r\n      return {\r\n        // ユーザー情報\r\n        user:{\r\n          userid: '',\r\n          password: ''\r\n        },\r\n        // バリデーションフラグ\r\n        flag1:false,\r\n        flag2:false,\r\n        flag3:false,\r\n      }\r\n    },\r\n    computed: {\r\n      canLogin() {\r\n        return !this.flag1 && !this.flag2 && !this.flag3 && this.user.userid.length != 0 && this.user.password.length != 0\r\n      }\r\n    },\r\n    methods: {\r\n      // ユーザー名のバリデーション\r\n      handleUserid(){\r\n        if(this.user.userid == ''){\r\n          this.flag1 = true\r\n        }else{\r\n          this.flag1 = false\r\n        }\r\n        if (this.user.userid.length != 0 && !/^[0-9]+$/.test(this.user.userid)) {\r\n          this.flag3 = true\r\n        }else{\r\n          this.flag3 = false\r\n        }\r\n      },\r\n      // パスワードのバリデーション\r\n      handlePassword(){\r\n        if(this.user.password == ''){\r\n          this.flag2 = true\r\n        }else{\r\n          this.flag2 = false\r\n        }\r\n      },\r\n      // ログイン処理\r\n      login() {\r\n        // this.$http.post('/api/login', this.user)\r\n        // // ログイン成功，ホーム画面へ遷移\r\n        //   .then((response) => {\r\n        //     if (response.data.code == 200) {\r\n        //       this.$router.push({path: '/home'})\r\n        //     }\r\n        //   })\r\n        //   // ログイン失敗，エラーメッセージを表示\r\n        //   .catch((error) => {\r\n        //     console.log(error)\r\n        //   })\r\n        sessionStorage.setItem('username', '橋本良亮')\r\n        sessionStorage.setItem('rolesno', '4')\r\n        sessionStorage.setItem('userid', '10')\r\n        this.$router.push({path: '/home'})\r\n      }\r\n    }\r\n  }\r\n</script>\r\n\r\n<style>\r\n.text {\r\n    font-size: 14px;\r\n  }\r\n\r\n  .item {\r\n    margin-bottom: 18px;\r\n  }\r\n\r\n  .clearfix:before,\r\n  .clearfix:after {\r\n    display: table;\r\n    content: \"\";\r\n  }\r\n  .clearfix:after {\r\n    clear: both\r\n  }\r\n\r\n  .box-card {\r\n    width: 480px;\r\n  }\r\n</style>"],"mappings":";AA2BA;EACAA,IAAA;EACAC,KAAA;IACA;MACA;MACAC,IAAA;QACAC,MAAA;QACAC,QAAA;MACA;MACA;MACAC,KAAA;MACAC,KAAA;MACAC,KAAA;IACA;EACA;EACAC,QAAA;IACAC,SAAA;MACA,aAAAJ,KAAA,UAAAC,KAAA,UAAAC,KAAA,SAAAL,IAAA,CAAAC,MAAA,CAAAO,MAAA,cAAAR,IAAA,CAAAE,QAAA,CAAAM,MAAA;IACA;EACA;EACAC,OAAA;IACA;IACAC,aAAA;MACA,SAAAV,IAAA,CAAAC,MAAA;QACA,KAAAE,KAAA;MACA;QACA,KAAAA,KAAA;MACA;MACA,SAAAH,IAAA,CAAAC,MAAA,CAAAO,MAAA,qBAAAG,IAAA,MAAAX,IAAA,CAAAC,MAAA;QACA,KAAAI,KAAA;MACA;QACA,KAAAA,KAAA;MACA;IACA;IACA;IACAO,eAAA;MACA,SAAAZ,IAAA,CAAAE,QAAA;QACA,KAAAE,KAAA;MACA;QACA,KAAAA,KAAA;MACA;IACA;IACA;IACAS,MAAA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACAC,cAAA,CAAAC,OAAA;MACAD,cAAA,CAAAC,OAAA;MACAD,cAAA,CAAAC,OAAA;MACA,KAAAC,OAAA,CAAAC,IAAA;QAAAC,IAAA;MAAA;IACA;EACA;AACA"},"metadata":{},"sourceType":"module","externalDependencies":[]}